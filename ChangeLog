* Sat May 26 2018 - tech@adalin.org
- AeonWave (3.1.1) stable; urgency=medium
 * Fix volume glitches for dynamic-gain and timed-gain filters
 * Account for the fact that pink-noise and brownian-noise both have a lowest
   cut-off frequency of 100Hz. Which can be used to create continuous noise
   instead of noise with possible volume glitches.

-- Erik Hofman <tech@adalin.org>  Sat 26 May  2018 15:15:00 + 0100

* Sat May 21 2018 - tech@adalin.org
- AeonWave (3.1.0) stable; urgency=high
 * Explicitly allow GPL version 2 and GPL version 3 applications to use
   the library.
 * Add distance filter frequency response.
 * Speed up waveform generation quite a bit.
 * Turn the reverb effect into a true 3d effect.
 * Add the option to register the reverb effect to audio-frames.
   - Due to memory considerations they only support up to large room sizes,
    any reflections with a larger delay will be ignored.
 * Add the option to define audio-frames as indoor by setting AAX_POSITION
   to AAX_INDOOR when calling aaxAudioFrameSetMode. It is possible to combine
   AAX_INDOOR with AAX_RELATIVE or AAX_ABSOLUTE (the default when omitted).
   This allows for indoor sound propagation where every audio-frame represents
   a room or a section of a room. Reverb and frequency filters can be used
   to simulate the properties of the room section defined by the audio-frame.
   By specifying the audio-frame indoor, sound will not become directional until
   it arives at the scene of the listener.
 * Add the option to define occlusion object parameters to the volume-filter
   and reverb-effect, which will influence the sound properties of the direct
   path of the sound.
 * Harden the matrix multiplication code so it will be more correct in more
   situations. A smaller update-rate than the refresh-rate could cause emitter
   and parent-frame data to be out of sync. Also absolute positions are handled
   better now.
 * Fix a mistake in 32-bit matrix calculations caused by copying just one
   row instead of all rows.
 * Add support for a static parametric-equalizer within the <sound/> section
   of AAXS files.
 * Increase the http stream timeout value. The default was too low.
 * Protect against deregistering an unregistered audio-frame or emitter.

-- Erik Hofman <tech@adalin.org>  Sat 21 May  2018 13:44:00 + 0100


* Fri Jan 05  2018 - tech@adalin.org
- AeonWave (3.0.11) stable; urgency=low
 * Fix a speed regression for matrix multiplications.
 * Add the 'auto-sustain' option for filters and effects which calculates the
   sustain time by subtracting the logarithmic frequency value multiplied by
   the auto-sustain value from the original value.

-- Erik Hofman <tech@adalin.org>  Fri 05 Jan  2018 13:57:00 + 0100


* Sun Dec 24  2017 - tech@adalin.org
- AeonWave (3.0.10) stable; urgency=medium
 * Considerably speed up envelope following calcualtion.
 * Add the option to define the duration of the waveform generated by the sound
   section of an AAXS file. The minimum duration is 1 second.
 * Allow pitch to be set as an attribute for frequency related parameters in
   filters and effects of AAXS files. The frequency then becomes pitch
   multiplied by the frequency defined in the sound section.
 * Protect against unrecognized filter or effect type definitions in AAXS files.
 * Fix audio device detection on Linux if Pulse Audio is inactive.
 * Fix the case where filters in the sound section of AAXS files could only
   be 12db/oct.

-- Erik Hofman <tech@adalin.org>  Sun 24 Dec  2017 14:32:00 + 0100


* Thu Dec 05 2017 - tech@adalin.org
- AeonWave (3.0.9) stable; urgency=low
 * Prevent an endless loop for mangled wav files.
 * Waveforms, filters and effects in the sound section of an AAXS file now are
   processed in the order of appearance which means a created waveform may be
   filtered before adding, mixing or modulating other waveforms.
 * Fix static frequency filter anomalies at the loop points of AAXS defined
   waveforms.

-- Erik Hofman <tech@adalin.org>  Tue 05 Dec  2017 11:22:00 + 0100


* Thu Nov 11 2017 - tech@adalin.org
- AeonWave (3.0.8) stable; urgency=low
 * Fix a problem for AAXS buffers added to AudioFrames.
 * Fix detecting directories with a dot in the name as not being a remote host.
   e.g. 'sound.dir/file.mp3"

-- Erik Hofman <tech@adalin.org>  Thu, 11 Nov  2017 13:44:00 + 0100


* Tue Nov  7 2017 - tech@adalin.org
- AeonWave (3.0.7) stable; urgency=low
 * Fix a problem where large AAXS files where truncated.
 * Reorganize the filter and effect cleanup for emitters, audio-frames and the
   sensor.
 * Add support for a static frequency filter and a static distortion effect
   within the <sound/> section.

-- Erik Hofman <tech@adalin.org>  Tue,  7 Nov  2017 13:19:00 + 0100


* Tue Oct 31 2017 - tech@adalin.org
- AeonWave (3.0.6) stable; urgency=low
 * Postpone initialization of AAXS filter and effect code for emitters to
   make sure they will be set after initializing the mixer which could change
   parameters like the refresh rate. As a bonus it is now possible to stream
   different AAXS buffers one after the other.
 * Reduce getaddrinfo timeout considerably by specifying ai_family = AF_INET
 * Fix a bug where a suspended configuration could not be resumed.

-- Erik Hofman <tech@adalin.org>  Tue, 31 Oct  2017 10:03:00 + 0200


* Sat Oct 21 2017 - tech@adalin.org
- AeonWave (3.0.5) stable; urgency=low
 * Add the aaxGetFrequencyFilterTypeByName function.
 * Restructure the filter and effects code a bit to make it easier to remove
   allocated data. And use the new functionality.
 * Add function to the C++ support class to get the type, waveform_type,
   frequency_filter_type and distance_model by name

-- Erik Hofman <tech@adalin.org>  Sat, 21 Oct  2017 13:39:00 + 0200


* Mon Oct  9 2017 - tech@adalin.org
- AeonWave (3.0.4) stable; urgency=low
 * Add the option to repeat the timed-gain filter for a specified number of
   times. This could be useful for repeating sounds like alarm and clock sounds.
   If a timed-pitch effect is present for the same emitter then it will repeat
   at the same moment the timed-gain filter restarts.
 * Fix the buffer length when a file is specified for the sound section of an
   AAXS file.

-- Erik Hofman <tech@adalin.org>  Mon, 09 Oct  2017 14:16:00 + 0200


* Tue Oct  3 2017 - tech@adalin.org
- AeonWave (3.0.3) stable; urgency=medium
 * Fix playback support to mp3 files.
 * Support WAV files with LIST adtl, bext, cue and smpl tags.
 * Allow specifying a file attribute in the sound section of AAXS files.
 * Allow processing, pitch, ratio and staticiy to be attributes instead of
   subnodes of the XML waveform node for a shorter notation of the sound
   definition.
 * Fix a possible segmentation fault when a requested WAV file was not found.

-- Erik Hofman <tech@adalin.org>  Tue, 03 Oct  2017 13:33:00 + 0200


* Fri Sep 29 2017 - tech@adalin.org
- AeonWave (3.0.2) stable; urgency=medium
 * Add a function to add a buffer to the dsp class.
 * Fix a bug in the matrix code which could create a stack smash.

-- Erik Hofman <tech@adalin.org>  Fri, 29 Sep  2017 09:08:00 + 0200

* Sat Sep 23 2017 - tech@adalin.org
- AeonWave (3.0.1) stable; urgency=medium
 * Add a function to get the distance model by name.
 * use the proper distance model if type is DISTANCE for AAXS defined filters.
 * Add functions to add a buffer object to the AeonWave and Frame classes.
 * Add the option to retrieve the original AAXS file when calling
   aaxBufferGetData when the buffer format is AAX_AAXS16S or AAX_AAXS24S.
 * Fix a few bugs for unusual situations in the new streaming code.

-- Erik Hofman <tech@adalin.org>  Sat, 23 Sep  2017 09:08:00 + 0200


* Sun Sep 17 2017 - tech@adalin.org
- AeonWave (3.0.0) stable; urgency=low
 * Switch to a dual licensing model with both GPL and a commercial license.
 * Switch to 64-bit build for windows and renamed the library to AeonWave.
 * Switch to 64-bit matrices for position and orientation.
 * Improve general rendering speed with about 30 percent.
 * Reorginze the streaming code to make it more flexible.
 * Add read support for Ogg/Vorbis using the Public Domain stb_vorbis code.
 * Add support for WAV embedded MP3 files.
 * Add support for native AAXS files when calling aaxBufferReadFromStream.
 * Support proper distortion (not clipping) when the gain of generated
   waveforms becomes (too) large
 * Add the option to define filters and effects in an AAXS file. These will
   get applied automatically when the buffer is added to an emitter, the mixer
   or audio frames.
 * Add the aaxAudioFrameAddBuffer and aaxMixerAddBuffer functions to be able to
   assign AAXS buffers with filter and effect information to audio-frames and
   the mixer.
 * Add a functions to get filter and effect types by name.
 * Add functions to get a conversion-type and to get a waveform-type by name.
 * Add a convolution effect to simulate acoustics based on an audio buffer.
   Note: This is a resource heavy effect, use with care.
 * Changed the return types of all filter and effect functions (except for the
   Create functions) for aaxFilter/aaxEffect to match the rest of the API.
   Note: This might require client side code changes.
 * Fixed some lingering header mistakes. This makes version 3.0 binary
   incompatible with earlier version. Recompilig is required.
 * Removed version 1.0 compatibility header files.
 * Renamed the C++ interface() functions to interface_name() since some projects
   undefine 'interface' causing the preprocessor to hide these functions.
 * Make sure that capturing does not stagnate the engine when a (http) stream
   stalls.
 * Fix a bug where modulating waveforms by non-sine waveforms caused silence.
 * Fix a segmentation fault when a particular file extension does not
   support writing.
 * Fix a problem where the looping mode was not preserved when a buffer was
   added to the emitter after the looping mode was set.
 * Fix a possible memory leak when a filter or effect was toggled between
   inactive and active again.
 * Fix reporting of min/max tracks and frequency for OSS v3

-- Erik Hofman <tech@adalin.org>  Sun, 17 Sep  2017 09:51:00 + 0200

* Fri Jul 29  2016 - tech@adalin.org
- AeonWave (2.7.0) stable; urgency=low
 * Add aeonwave.hpp, a header file only AeonWave C++ abstraction API.
 * Add AAX_RELEASE_MODE to disable most of the error checking.
 * Add aaxDriverGetErrorNo() and assign errors to the specific driver handle.
 * Prevent aaxDriver close from generating an error if handle == 0.0
 * Prevent a segmentation fault for invalidated remote streaming hosts.
 * Prevent a segmentation fault when handle == 0 for aaxAudioFrameDestroy,
   aaxEmitterAddBuffer and aaxEmitterRemoveBuffer.

-- Erik Hofman <tech@adalin.org>  Fri, 29 Jul  2016 11:13:00 + 0100

* Fri Oct 15  2015 - tech@adalin.org
- AeonWave (2.6.1) stable; urgency=low
 * Fix a few border case tests for mixer configuration.
 * Make sure testing for 'AAX_frequency_filter' also works even though 
   'AAX_frequency_filter_1.1' is defined.
 * Fix a mostly unnoticeable mistake for envelope following distortion filter.
 * Provide a more verbose renderer string for ALSA

-- Erik Hofman <tech@adalin.org>  Fri, 15 Oct  2015 10:49:00 + 0200

* Mon Aug 31  2015 - tech@adalin.org
- AeonWave (2.6.0) stable; urgency=low
 * Rewrote the loop-point and buffer switching code for better loop handling.
 * Don't use hardware volume when the number of subdevices exceeds 1 for ALSA.
 * Add a AAX_FORWARD_GAIN parameter for donut shaped sound distribution.
 * A major overhaul of the frequency filter
   - Speed up the filter execution time.
   - Add support for 6db/oct, 24dB/oct, 36dB/oct and 48dB/oct filtering,
     12dB/oct is the default.
   - Add support for both Butterworth and Bessel filter types,
     Butterworth is the default.
 * Allow the paramtertic equalizer parameters to be defined more flexible by
   allowig LP-LP-HP type setups in addition to HP-LP-HP.
 * Add the option to define a paramtertic equalizer at every audio-frame which
   will be applied after all filters and effects (incl. the frequency filter).
 * Speed improvements for the graphic and paramtetric equalizers.
 * Add a surround sound crossover filter for 5.1 and 7.1 systems
   defined at 80Hz and 24dB/oct.
 * HRTF improvements.
 * Improve (white)noise waveform frequency spectrum spread.
 * Fix a possible segmentation fault for audio-frame-registered emitters that
   use delay effects.

-- Erik Hofman <tech@adalin.org>  Mon, 31 Aug  2015 17:53:00 + 0200

* Wed Mar 25 2015 - tech@adalin.org
- AeonWave (2.5.3) stable; urgency=low
 * Decrease memory consumption considerably for loopback-capture and
  slightly for streaming sensors.

-- Erik Hofman <tech@adalin.org>  Wed, 25 Mar 2015 15:33:00 + 0100

* Fri Mar 06 2015 - tech@adalin.org
- AeonWave (2.5.2) stable; urgency=low
 * Fix Auto-Wah and other time based effects

-- Erik Hofman <tech@adalin.org>  Fri, 06 Mar 2015 13:46:00 + 0100

* Fri Feb 27 2015 - tech@adalin.org
- AeonWave (2.5.1) stable; urgency=low
 * Better support for 'Generic Software' and 'Generic Hardware' for Windows
   OpenAL emulation.
 * Fix stream length reporting on 32-bit architerctures.
 * Lower the socket receive buffer to minimize stream delays.
 * Set the network timeout to at least 0.5 seconds.
 * Fix a rare crash when destroying the sensor.

 -- Erik Hofman <tech@adalin.org>  Fri, 27 Feb 2015 12:27:00 + 0100

* Fri Feb 20 2015 - tech@adalin.org
- AeonWave (2.5.0) stable; urgency=low
 * Added a capabilities interface to detect the limits of the audio hardware
   by making calls to the aaxMixerGetSetup function.
 * Changed the threading model from one thread per mixer-registered audio-frame
   to a load-balancing threadpool model. This slightly increases the work the
   CPU has to do but divides the wall time spent on rendering by the number of
   physical cores. Threading is now always active on multi-core systems except
   when the environment variable AAX_USE_THREADPOOL is set to 0.
 * Add support for the ARM architecture including support for hardware FPU
   and NEON. Rendering performance is comparible with Intel/AMD Cores
   at a matching CPU frequency.
 * Support defining a default output device in the confguration file.
 * Fix a problem when a registered sensor had a different number of
   audio periods in relation to the playback device.
 * Fix an emitter looping bug introduced in version 2.4.1
 * Support URL parsing for the file backend and properly handle HTTP streaming
   (READ mode only).
 * Support batched (fast, non-realtime) mode for Audio Files and Loopback.
 * The file writing backend postpones writing of the file header to until
   after the state is set to AAX_PLAYING.
 * The file backend can now return song meta data.
 * Install to the proper system directory on 64-bit Windows

 -- Erik Hofman <tech@adalin.org>  Fri, 20 Feb 2015 09:15:00 + 0100

* Tue Jun 10 2014 - tech@adalin.org
- AeonWave (2.4.1) stable; urgency=low
 * Fixed a possible segmentation fault with certain ALSA drivers.
 * Fixed a possible segmentation fault for looping emitters.

 -- Erik Hofman <tech@adalin.org>  Tue, 10 Jun 2014 12:58:00 + 0200

* Wed May 21 2014 - tech@adalin.org
- AeonWave (2.4.0) stable; urgency=low
 * Changed the conditions for binary distribution;
   The library may now be included in commercial and non commercial projects
   provided the user is made aware of the option to upgrade to the HD version.
   See Copyright section 2.1; Rights and Limitations of Grant.
 * Reorganized the code to support different hardware rendering schemes in
   the future. As a result the current rendering speed has increased 25% to 75%
   (depending of the computer hardware, older hardware profit the most).
 * Add the option to use timer-based rendering instead of interrupt-based
   rendering for ALSA (experimental).
 * Fix a problem where the WASAPI device period could become lower than the 
   minimum allowed period for that particular device.
 * Switched to a new xml configuration file format.
   Both the old and the new formats will be supported up to version 3.0.0
 * Allow custom pcm devices (defined in .asoundrc) for ALSA.
 * Tweaked Surround Sound, Spatial and HRTF playback.
 * Support WAV files with a LIST section.
 * Fix Auto generated waveform loop-points.
 * Fix a problem with capture-only backends

 -- Erik Hofman <tech@adalin.org>  Wed, 21 Mar 2014 10:45:00 +0200

* Sat Dec 21 2013 - tech@adalin.org
- AeonWave (2.3.4) stable; urgency=high
 * Fix a problem where distance delayed objects that where registered at
   the mixer or an audio-frame in non-playing mode started with the wrong 
   position and orientation matrix causing unwanted delays.
 * Fix an incorrect header problem while streaming mp3 files.
 * Fix a stupid error where AeonWave-Lite didn't initialize correctly.
 * Fix volume handling for windows devices without hardware volume support.
 * Activate AVX instruction support.

 -- Erik Hofman <tech@adalin.org>  Sat, 21 Dec 2013 11:21:00 +0100

* Mon Nov 25 2013 - tech@adalin.org
- AeonWave (2.3.3) stable; urgency=medium
 * Fix a problem with files with a .wav extension that aren't.
 * Prevent destroying of the emitter unless it is in the AAX_PROCESSED state.

 -- Erik Hofman <tech@adalin.org>  Mon, 25 Nov 2013 12:34:00 +0100

* Tue Nov 21 2013 - tech@adalin.org
- AeonWave (2.3.2) stable; urgency=medium
 * Fix clipping during spoken text under certain conditions.
 * Fix a problem where the equalizer was turned off under certain conditions.
 * Fix incorrect file-type handling for the Audio Files backend and add proper
   error reporting to the calling program.

 -- Erik Hofman <tech@adalin.org>  Tue, 21 Nov 2013 13:21:00 +0100

* Sun Nov 14 2013 - tech@adalin.org
- AeonWave (2.3.1) stable; urgency=high
 * Complete rewrite of the File backend
   - Add mp3 file output support if libmp3lame is found.
   - Add support for more WAV file types and fix mulaw and alaw decoding.
 * Add the option to register one sensor opened in write mode (file only) at
   the mixer to support a dedicated record to file option.
 * Fix a major registered-sensor bug (most noticeable on Windows).
 * Fix an occasional deadlock when deregistering audio-frames.

 -- Erik Hofman <tech@adalin.org>  Sun, 14 Nov 2013 15:14:00 +0200

* Fri Oct 18 2013 - tech@adalin.org
- AeonWave (2.3.0) stable; urgency=high
 * Distance-delay mode now adds delayed state changes in addition to delayed
   start/stop. State changes include; pitch, gain, position, orientation and
   velocity.
 * Added sense of height to Surround sound; emitters can now be heard above
   and below the speakers. This is best perceived if the speakers and the
   listeners ears are (almost) in the same horizontal plane.
 * Add support for the AAXS (AeonWave Auto-generated XML Sound) audio format.
 * Add double precision 64-bit floating point matrix support functions.
 * Implement hardware volume support for ALSA and WASAPI.
   - hardware volume is adjusted within hardware boundaries, volume settings
     outside the hardware range are adjusted using software fall-back.
   - the volume filter now reports the hardware minimum and maximum.
 * Implement Auto-Gain Control with a user definable adjust-rate.
 * Add the option to select stereo, mono-left, mono-right or mono-mix for
   audio capturing.
 * Add an aaxMixerGetState function to retrieve the state of the current
   audio stream. This can for instance be used to reinitialize the device
   after the hardware audio format has changed.
 * Add the option to set the number of times to loop a buffer.
 * Fixed reported bugs.
   - Fix an issue that prevented ALSA from reporting new hardware while an
     application was running.
   - Fix an issue with loop-back capturing of the playback stream.
   - Fix an issue with flanging for emitters registered at the final mixer.
   - Fix an issue that affected HRTF and Surround sound playback.

 -- Erik Hofman <tech@adalin.org>  Mon, 27 Aug 2013 08:27:00 +0200


* Fri Mar 08 2013 - tech@adalin.org
- AeonWave (2.2.4) stable; urgency=low
 * Add an aaxFree function to free memory allocated by the library.
   This might be necessary when using different compilers.
 * Add support for a Reverb effect which only applies to the final mixer.
 * Make the dynamic-gain envelope-following mode a proper audio-compressor and
   expander with noise gate. The offset property defines the threshold level.
 * Add the option to retrieve the compression level for every track.
 * Add an aaxAudioFrameGetSetup function to be able to retrieve the above.
 * Add the ability to retrieve peak and average audio levers for every track
   (final mixer only).
 * Fix distortion behavior, it was over compressing for high distortion factors.
 * Add an envelope following option for the distortion effect.
 * Remove some duplicate code, most code is now shared between the mixer and
   audio-(sub)frames which should lead to fewer case specific problems.
 * Fix LFO situations where changing the LFO values could become out of bounds.
 * Fix filters and effects for registered sensors.
 * Overhaul of the Windows backend and threads code.
   - Fix a lot of corner case situations that failed before.
   - Improve runtime performance considerably.
   - Fix registered sensors.
 * Allow sensors to be registered at sub-frames.
 * Expose the driver latency.

 -- Erik Hofman <tech@adalin.org>  Fri, 08 Mar 2013 12:32:00 +0200


* Tue Aug 21 2012 - tech@adalin.org
- AeonWave (2.2.3) stable; urgency=high
  * Fix a naming clash between ZeroXML and libxml2. The function names of the
    library were inadvertently exposed.
  * Sanitize the slot parameters for Filters and Effects when calling their
    respective SetState function to prevent possible buffer overflows.

 -- Erik Hofman <tech@adalin.org>  Tue, 21 Aug 2012 10:34:00 +0200


* Tue Jul 31 2012 - tech@adalin.org
- AeonWave (2.2.2) stable; urgency=medium
  * Fix a delay effects (phasing, chorus, flanging) problem that was introduced
    by the off-by-one fix for streaming audio with a low sample frequency.
  * Fix IMA4 support for WAV file capturing and playback on non file backends.
  * Fix end-of-file problem that could cause a segmentation fault.
  * Fix an off-by-one problem for the loopback device.

 -- Erik Hofman <tech@adalin.org>  Tue, 31 Jul 2012 13:10:00 +0200


* Mon Jul 16 2012 - tech@adalin.org
- AeonWave (2.2.1) stable; urgency=low
  * Added native support for Windows (Vista or later).
  * A complete overhaul of the File backend;
    - added file capturing support and support for different output formats.
    - added the infrastructure to detect and handle different audio file-formats
      + WAV files are always supported for input and output.
      + MP3 file (input) is supported if libmpg123 is installed.
  * Fix the default ALSA device for when PulseAudio isn't active.
  * Fix an off by one problem for streaming audio with a low sample frequency
    compared to the mixer frequency.
  * Fix a problem where multiple open backends in the same application could
    not have different rendering types (HRTF/Stereo/Spatial/Surround).
  * Moved the include files aax.h to aax/aax.h and aaxdefs.h to aax/defines.h
    and provide stubs that automatically include the correct header file.
  * Moved the configuration file from ~/.aaxconfig.xml to ~/.aax/config.xml
    and added code that automatically moves the old configuration file to the
    new location if it doesn't yet exist.
  * Made the aaxDriverGetInterface functions more reliable by storing interface
    description for every opened device (as a bonus this also causes less
    kernel audio device detection calls).

 -- Erik Hofman <tech@adalin.org>  Mon, 16 Jul 2012 10:45:00 +0200


* Tue May 01 2012 - tech@adalin.org
- AeonWave (2.2.0) stable; urgency=low
  * Added an 8 band graphical equalizer for the final mixer stage.
  * Added an envelope following option for filters and effects (auto-wah).
  * Added seamless transition from tube-like soft-clipping to sharp-clipping
    and add an asymmetric clipping option. This is most noticeable for
    the distortion effect.
  * Added support for registered sensors. Registering an aaxConfig handle
    which is opened in AAX_MODE_READ mode eliminates the need for the
    application to do buffer handling between the physical input device and
    an emitter. It also improves latency since reading the buffer and
    processing it's contents is done in a single step.
    Registered sensors are only guaranteed in stereo mode for this release.
  * Added support for subframes. Subframes are like regular audio-frames
    but they are registered at other audio-frames. Where audio-frames
    render in their own thread, subframes will render in their parents thread.
  - This removes any limit to the number of supported emitters as long as the
    system can handle the load. The maximum number of registered emitters,
    sensors and subframes per audio frame is still 256.
  * Move the speaker setup from the global section to device specific section
    in the configuration file. This allows for different setups for headphone
    connections and (for example) 4 channel spatialised speaker setup.
  * Added support for a dedicated configuration file entry for every device.
  * Added the inverse of the modulation-waveform for filters and effects.
  * Added the option to modify the Q (resonance) factor of frequency filters.
  * A complete overhaul of the recording code and of the ALSA backend.
  * Fixed filter and effect support for streaming audio.
  * Added a resampling option for fetching buffer data.
  * Speed-up of filter and effect processing.
  * Added flanging effect.
  * Dozens of small fixes.

 -- Erik Hofman <tech@adalin.org>  Tue, 01 May 2012 10:31:05 +0200


* Fri Nov 11 2011 - <tech@adalin.org>
- AeonWave (2.1.2) stable; urgency=medium
  * Fix some possible type conversion problems
  * Fix a possible dead-lock situation

 -- Erik Hofman <tech@adalin.org>  Fri, 11 Nov 2011 15:33:00 +0100


* Mon Oct 10 2011 - <tech@adalin.org>
- AeonWave (2.1.0) stable; urgency=low

  * Added waveform generator
  * Added timed-gain filter and timed-pitch effect (envelopes)
  * Assorted small bug-fixes and usability updates.

 -- Erik Hofman <tech@adalin.org>  Mon, 10 Oct 2011 11:05:00 +0100


* Tue Aug 27 2011 - <tech@adalin.org>
- AeonWave (2.0.0) stable; urgency=low

  * Added hardware acceleration
  * Added submixing capable audio-frames
  * Added support for Filters and Effects
  * New simplified, robust and consistent API
  * New spatialised speaker setup

 -- Erik Hofman <tech@adalin.org>  Tue, 27 Aug 2011 14:08:00 +0200


* Wed Dec 23 2009 - <tech@adalin.org>
- AeonWave (1.0.0) stable; urgency=low

  * Split up the AeonWave library and the OpenAL support code
  * New HRTF and Surround sound setups
  * Added matrix operations

 -- Erik Hofman <tech@adalin.org>  Wed, 23 Dec 2009 15:21:00 +0100


* Wed May 21 2008 - <tech@adalin.org>
- OpenAL (1.0.0) stable; urgency=low

  * Initial version following the Openal 1.1 specification

 -- Erik Hofman <erik@ehofman.com>  Wed, 21 May 2008 13:42:00 +0100

