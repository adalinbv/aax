* Thu Aug 08 2024 - tech@adalin.org
- AeonWave (4.1.0) stable; urgency=medium

 * Add a timed layer filter.
 * Add a dynamic wavefold effect.
 * Implement a 16-band equalizer which gets enabled instead of the 8-band
   equalizer when slot 2 or slot 3 of the filter contains gain information.
 * Increase the number of frequency bands for the graphic equalizer from 4 to 5
 * Increase the number of envelope stages from 6 to 8 for all timed filters
   and effects.

-- Erik Hofman <tech@adalin.org>  Thu 08 Aug 2024 11:07:27 + 0100


* Thu Jul 04 2024 - tech@adalin.org
- AeonWave (4.0.0) stable; urgency=medium

 * Switch to 64-bit only.
 * API Changes:
   + All non 64-bit matrix functions are removed.
   + Merge aaxWaveformType and aaxFrequencyFilterType into aaxSourceType;
     + This also removes support for combining multiple waveforms,
       but the new definition is much more flexible.
     + Remove the _WAVE suffix from waveforms and add support for pure waveforms
   + Return  the appropriate enum or uint64_t when retrieving a state.
   + Switch to using stdbool:
     + Use the bool type when the only options are AAX_TRUE or AAX_FALSE which
       are now synonyms for true and false and can be used interchangeably.
   + Change aaxGetByName to require a second aaxTypeName parameter and
     remove aaxGetMajorVersion, aaxGetMinorVersion, aaxGetPatchLevel,
     aaxGetVersionString, aaxGetCopyrightString, aaxGetTypeByName,
     aaxGetWaveformTypeByName, aaxGetFrequencyFilterTypeByName,
     aaxGetDistanceModelByName, aaxMaxFilter and aaxMaxEffect.
   + Remove the aaxBufferProcessWaveform function. The aax-utils package
     contains a bufferProcessWaveform function in src/driver.[ch] which emulates
     this function by constructing an AAXS string which can be assigned to a 
     buffer. AAXS files remain forward and backward compatible.
   + remove AAX_CONFIG_HD; use AAX_CONFIG instead.
 * Rename aeonwave.hpp to aeonwave
   + Optimize the way tied filter and effects are handled, which fixes tieing of
     multiple parameters from the same filter or effect.
   + Add a number of useful math functions and constants to the math namespace.
   + Do not push back emitters, sensors or audio-frames to the cache when they
     fail to register (maybe because they where already registered).
 * Buffer changes:
   + Make it possible to get all buffer info.
   + Get the correct sample rate from the stream and properly return
     AAX_SAMPLE_RATE for .aaxs files.
   + Make it possible to get the number of patches in a sound file.
   + Implement tremolo and vibrato from audio file provided settings.
   * Add the option to define modulation mode (gain, pitch, frequency, chorus
     or any combination), factor and frequency using a modulation tag in the
     info section of AAXS files. Add the option to retrieve these values using
     aaxBufferGetSetup.
 * Filters and Effects changes:
   + Accept 0.0 as a valid value for the volume filter response time parameter.
     Prevent occlusion to get enabled based on the default dimensions.
   + Calculate offset ourselves and ignore the AAX_LFO_OFFSET parameter for
     the dynamic gain filter.
   + Implement seconds, milliseconds and microseconds for the type specifier of
     the time parameters for the timed-gain filter and delay effect.
   + Add support for AAX_RANDOM_SELECT to the dynamic layer filter.
   + Fix AAX_RANDOM_SELECT for the frequency filter and delay effects.
     Fix a possible problem where Fc is too close to 0.5*Fs
   + Bump reverb version to 1.2 and add support for initial delay, diffusion
     and high damp (hf gain) to reverb. Fix reverb frequency filtering.
     Support 8 types of room damping which can be parsed as a status.
     Add support for defining the decay-level in seconds, making it reverb-time.
     Implement a high-pass filter for reverb.
   + Implement a frequency filter on the wet signal of the distortion effect
     and add support for waveform driven distortion.
   + Calculate the peak value and the average value for every band in the
     graphic equalizer. Add the option to get these values from aaxSenorGetSetup
     and aaxMixerGetSetup.
 * Fix a segmentation fault when the state was not set for the equalizer.
 * Fix a possible pipewire segmentation fault.
 * Fix numerous problems, mistakes and omissions.
 * Fix a number of small one-time memory leaks.

-- Erik Hofman <tech@adalin.org>  Thu 04 Jul 2024 11:27:23 + 0100


* Tue May 10 2023 - tech@adalin.org
- AeonWave (3.12.4) stable; urgency=low

 * Move audio-frame filter and effect processing to the renderer.
 * Add support for the cycloid waveform both in the sound section of AAXS files
   and as an LFO source.
 * Add sample rate decimation and noise staticity to the bitcrusher filter.
 * Add the ability to set the noise type for the bitcrusher filter.
 * Allow assigning both the delay-line effect and the delay-effects
   (phasing/chorus/flanging) simultaneously.
 * Stretch the max. effects time (reverb and delay line) to 1 second.
 * Allow delay effects (phasing, chorus, flanging, delay line) to have
   negative effect levers to simulate phase shifting.
 * Introduce AAX_SECONDS and AAX_MILLISECONDS next to AAX_MICROSECONDS and
   allow it to be used for the delay effects.

-- Erik Hofman <tech@adalin.org>  Wed 10 May 2023 09:28:11 + 0100


* Fri Feb 10 2023 - tech@adalin.org
- AeonWave (3.12.3) stable; urgency=low

 * Switch tot ZeroXML version 2.0+
 * Add the get_gain, get_reverb_level and get_chorus_level to the AeonWave class
 * Use xmlNodeCompareName when processing the sound section of AAXS files.
 * Use xmlNodeCompareName when processing backends.
 * Fix a possible segmentation fault in the PipeWire backend.

-- Erik Hofman <tech@adalin.org>  Fri 10 feb 2023 12:57:31 + 0100


* Wed Dec 21 2022 - tech@adalin.org
- AeonWave (3.12.2) stable; urgency=low

 * Improved ARM64 support.
 * Add double precision NEON support.
 * Correctly apply the master gain.
 * Much improved Arcade and Synthesizer rendering modes.
 * Do not show Bluetooth or USB devices for PipeWire but leave it to
   the PulseAudio backend (in which case it will not report non USB or
   Bluetooth devices).
 * Fix a out of bound error, vec3 had only 3 members, not 4.
 * Prevent notes which are set to started and stopped again before actual
   playback began to not be audible.
 * Fix the refresh rate for the PipeWire backend when no config file is found.

-- Erik Hofman <tech@adalin.org>  Wed 21 Dec 2022 15:12:03 + 0100


* Sat Aug 27 2022 - tech@adalin.org
- AeonWave (3.12.1) stable; urgency=low

 * Fix Bessel frequency filter rendering speed improvements for SSE2.
 * Mark props3d as changed after creation to set the max. gain to non-zero
 * Fix a mistake where C++ Buffer class references could not be assigned.

-- Erik Hofman <tech@adalin.org>  Sat 27 Aug 2022 08:08:27 + 0200


* Thu Aug 11 2022 - tech@adalin.org
- AeonWave (3.12.0) stable; urgency=low

 * Implement a PipeWire audio backend.
 * Rendering speed improvements between 15% and 60% for the frequency filter
   which can result in up to 40% overall increase in rendering speed.
 * Re-synchronize the midi instruments with the master repository.
 * Handle PulseAudio returning a different audio-format than requested.
 * Accept any version of libssl as long as it supports the correct functions.
 * Make it possible to return buffer meta-data after calling the 
   aaxBufferReadFromStream function. The meta-data is available until the next
   call to aaxBufferReadFromStream, by calling the aaxDriverGetSetup function.
 * Report I/O errors. Especially when an https connection is requested and SSL
   is not installed.
 * Clean up numerous allocated memory locations at exit.
 * Fix possible cracking-sounds caused by an unnecessary all-pass filter step in reverb.
 * Fix even repeat-numbers being one too many for the timed gain filter.

-- Erik Hofman <tech@adalin.org>  Thu 22 Aug 2022 07:49:31 + 0200


* Wed Mar 23 2022 - tech@adalin.org
- AeonWave (3.11.1) stable; urgency=low

 * Fix a regression in the streaming audio code.

-- Erik Hofman <tech@adalin.org>  Wed 23 Mar 2022 09:11:07 + 0200


* Tue Feb 22 2022 - tech@adalin.org
- AeonWave (3.11.0) stable; urgency=high

 * Add support for AIFF and snd/au files.
 * Add support for pitch-fractions.
 * Add specific AL, GS and XG configuration files for chorus and reverb.
 * Add the option to alter the Q-factor of the frequency filter instead of the
   cutoff-frequency, when using an LFO.
 * Rename the 'Audio Files' backend to 'Audio Streams' but keep 'Audio Files'
   as an unreported alias
 * The aaxBufferReadFromStream function now will fetch, and return, .pls .m3u
   and .m3u8 playlists from a remote connection. It is up to the caller to
   handle them properly.
 * Reorganize the stream connecting code for shorter connection times.
 * Allow for up to 32 tracks in the source buffer, from 8 previously.
 * A complete overhaul of the WAV handling code making it much more robust,
   fault tolerant and support more chunk types. Also fix clicking sounds when
   streaming files with a sample-rate not matching the playback rate.
 * Add stream writing to OGG/Vorbis if libvorbisenc and libogg are found.
 * Fix streaming of multi-channel audio files in cases where the playback rate
   was too high for the internal buffer sizes resulting in slowed-down,
   choppy playback.
 * Fix a segmentation fault when trying to parse a too large vorbis file into
   a too small audio buffer (max 20 seconds).
 * Fix the MP3 stream writing the wrong bit-rate to the file header.
 * Fix a buffer overflow when the delay effect is being generated by the
   chorus/phasing/flanging effect and then becomes a delay-line effect which
   requires a larger history buffer.
 * Fix a possible null-pointer reference for filters and effects when setting
   the state with an unsupported waveform.
 * Fix a segmentation fault at the end of a non threaded stream playback.

-- Erik Hofman <tech@adalin.org>  Tue 22 Feb 2022 22:02:20 + 0200


* Mon Jun 21 2021 - tech@adalin.org
- AeonWave (3.10.0) stable; urgency=high

 * Add aaxSensorSetOffset() and aaxSensorSetOffsetSec() functions to set the
   offset within a sensor which supports seeking.
 * Add an id3v2 header for mp3 playback.
 * Add variable bit-rate support for mp3 playback (set bitrate to zero).
 * Add a delay-line effect with one delayed signal for up to 200ms.
 * Add a dynamic-timbe filter to dynamically mix between two sound
   layers in the sound section of aaxs files.
 * Implement legato mode for Emitters.
 * Rework how gain, expression, pressure and soft-mode interact for the
   final volume in the Instrument class.
 * Fix a segmentation fault for an empty sound section of an aaxs file.
 * Fix an improbable situation where _batch_atanps can cause an unaligned data
   problem for the SIMD accelerated versions of this function.
 * Fix a possible use-after-free situation for the ALSA backend.

-- Erik Hofman <tech@adalin.org>  Mon 21 Jun 2021 09:55:21 + 0100


* Tue Jan 12 2021 - tech@adalin.org
- AeonWave (3.9.1) stable; urgency=high

 * Much improved top-end for synthesizer buffer playback.
 * Removed a number of sources of possible small audio glitches.
 * Fix a situation where the pointer could get a value before the start of the
   buffer when generating noise.
 * Explicitly set handle->ctx to NULL for PulseAudio when it is destroyed to
   prevent a segmentation fault.

-- Erik Hofman <tech@adalin.org>  Tue 12 Jan 2021 12:12:21 + 0200


* Thu Aug 27 2020 - tech@adalin.org
- AeonWave (3.9.0) stable; urgency=low

 * Implement a native PulseAudio backend.
 * Support HTTPS streams when an OpenSSL compatible library is found.
 * Delay volume clipping until the every last moment. This may require
   the emitters AAX_MAX_GAIN to be set to a higher value since the gain
   could get higher than AAX_MAX_GAIN for the final calculation.
 * Limit the cutoff frequency range for frequency filters between 20Hz and
   90% of half the sample frequency to prevent instability.
 * Speed up of up to 100% for instrument generation.
 * Speed up of the frequency filter by not filtering all of the delay effects
   buffer but only the no. samples that are required by the delay-effects.
 * A complete rewrite of the reverb effect fixing a regression in the process.
 * Complete rewrite of the non-graphical equalizer. Add support for a third
   cutoff frequency, making it a four-band equalizer. And add the option to
   define a filtering order for every section when using AAXS files.
 * Add the option to assign the compressor to the final mixer stage.
 * Ad the option to limit the spread of instruments which are wide-stereo.
 * Fix a bug where in case of unaligned data for conversion functions the
   result was added to a possibly uninitialized buffer.
 * Fix a regression for the compressor.

-- Erik Hofman <tech@adalin.org>  Thu 27 Aug 2020 09:55:27 + 0100


* Tue Apr 14 2020 - tech@adalin.org
- AeonWave (3.8.3) stable; urgency=high

 * Use the Doppler factor to attenuate the sound moving towards the listener
   near the speed of sound.
 * Make it possible to create a reproducible random sequence by specifying a
   random attribute for noise waveforms which defines the random seed.
 * Fix a possible buffer out-of-bounds when using noise waveforms.
 * Fix a problem where a release-time for the timed gain filter, which is
   shorter than a single update, would silence the sound.

-- Erik Hofman <tech@adalin.org>  Tue 14 Apr 2020 10:52:54 + 0100


* Sat Feb 22 2020 - tech@adalin.org
- AeonWave (3.8.2) stable; urgency=medium

 * Switch to binary forward, and  backward, compatible strong typed handles
   for compile time error detection.
 * Add AAX_RANDOMNESS as an option to certain filters and effects, which
   generates a low-frequency noise as a waveform.
 * Add support for 1st-order only reverb (with 4 reflection paths and a
   direct path).
 * Fix a segmentation fault when specifying an unsupported protocol name.
 * Limit writing of stream data to known safe paths such as the user home
   directory and the temporary directory.
 * Fix sporadic crackling sounds caused by the timed-gain filter.
 * Fix an artefact when the frequency filter cut-off frequency became too low.

-- Erik Hofman <tech@adalin.org>  Sat 22 Feb 2020 02:20:22 + 0100


* Sat Feb 01 2020 - tech@adalin.org
- AeonWave (3.8.1) stable; urgency=medium

 * Fix a problem where calling aaxBufferReadFromStream with a handle
   which was not opened using one of the aaxDriverOpen functions could
   cause a segmentation fault.

-- Erik Hofman <tech@adalin.org>  Sat 01 Feb 2020 11:42:11 + 0100


* Mon Jan 20 2020 - tech@adalin.org
- AeonWave (3.8.0) stable; urgency=medium

 * Make it possible to specify the parameter-type for tied properties,
   defaults to AAX_LINEAR.
 * Enable reverb for the instrument code to support reverb the way MIDI dictates
 * Improved Reverb and make it possible to split the 1st order reflections
   section and the reverberation (nth order reflections) section between
   audio-frames. This will allow multiple instruments with different reverb
   levels to be combined in a single reverberation stage
 * Add the option to define a AAX_DECAY_LEVEL greater than 1.0 for reverb,
   in which case the decay level will max out at 1.0 and the direct path will
   be reduced by 1.0/AAX_DECAY_LEVEL simulating an obstruction between the
   sound source and the listener.
 * Add AAX_RANDOM_SELECT as a state option for the frequency filter.
 * Add the option to slide logarithmically through the frequency range for
   frequency filters.
 * Make the applying-mode of filters and effects using aaxs files default to
  'append' rather than 'overwrite' if the mode attribute is not defined.
 * Reorganize the order in which the gains are applied because in some cases
   the gain value used for envelope following was always maxed out.
 * Prevent a double lock problem when assigning aaxs files to the mixer.
 * Better handle registering objects to unregistered audio-frames.
 * Prevent a segmentation fault when an object which is registered to another
   object gets deregistered from a completely different object.
 * Fix a number of buffer data conversion bugs:
   + Set the correct ringbuffer format after conversion, if required.
   + Do not convert from 32-bit to 24-bit if it already is 24-bit
   + Also convert to AAX_PCM24S_PACKED when requested.
 * Fix occlusion. Due to a missing line the filters data-buffer was not set.
 * Fix pitch-slide timing problems.

-- Erik Hofman <tech@adalin.org>  Mon 20 Jan 2020 14:20:20 + 0100


* Tue Dec 03 2019 - tech@adalin.org
- AeonWave (3.7.3) stable; urgency=low

 * Speed up waveform generation and RMS calculation by a fator of 2 for AVX
 * Speed up frequency filtering and resampling for systems that support FMA3
 * Deprecate the release-factor attribute for timed-gain filters in favor of
   a release-time attribute. (Use aaxsstandardize for automatic conversion).
 * Fix an issue where chorus could produce clicks on low pitch values.
 * Reset timed filters and effects to their initial value when an emitter
   gets initialized again.
 * Bump version nubers of filters and effects that now support timed operation.
 * Make sure that filters and effects don't run if the parameter selection
   doesn't have an effect anyhow.

-- Erik Hofman <tech@adalin.org>  Tue 03 Dec 2019 11:39:06 + 0100


* Tue Nov 19 2019 - tech@adalin.org
- AeonWave (3.7.2) stable; urgency=low

 * Add the option to use timed-transition as an alternative to
   envelope-following or waveform-shapes for filters and effects.
 * Add the option to define an <fm/> section in addition to a <sound/>
   section specially for improved synthesizer modes.
 * Fix a read one sample beyond the buffer length for convolution.
 * Various updates to quite a number of instruments.

-- Erik Hofman <tech@adalin.org>  Tue 19 Nov 2019 11:05:52 + 0100


* Tue Nov 09 2019 - tech@adalin.org
- AeonWave (3.7.1) stable; urgency=low

 * Fix a typo which caused the forward gain to be zero when it wasn't explicitly
   set after retrieving the filter from the emitter.
 * Fix a division by zero for IMA4 encoded wav files.
 * Fix tied parameter math operators. Speedup when it's basically a no-op.
 * Fix a harmless void reported error when the mixer is initialized:
   _aaxGetCapabilities: Invalid or NULL handle type at initialization
 * Fix a pointer mismatch when destroying buffers using the AeonWave class.
 * Fix using shared non-static data for multiple emitters when using ISO9613
   distance attenuation.

-- Erik Hofman <tech@adalin.org>  Tue 09 Nov 2019 14:29:12 + 0100


* Tue Oct 31 2019 - tech@adalin.org
- AeonWave (3.7.0) stable; urgency=low

 * Add an 80's FM Synthesizer style playback mode for AAXS defined instruments.
 * Add a 70's Arcade Game Console playback mode for AAXS defined instruments.
 * Fix initial delay support for the dynamic-pitch-effect.
 * Fix combining a sound file and one or more waveforms.
 * Fix support for a combination of AAX_RELEASE_FACTOR and
   AAX_(INVERSE)_ENVELOPE_FOLLOW

-- Erik Hofman <tech@adalin.org>  Tue 31 Oct 2019 11:25:18 + 0100


* Thu Oct 17 2019 - tech@adalin.org
- AeonWave (3.6.7) stable; urgency=low

 * Speed up Brightness and Harmonic Intensity handling for instruments.
 * Disable stream ICY support for now for security reasons.
 * Switch to the latest stb_vorbis code which contains some security fixes.

-- Erik Hofman <tech@adalin.org>  Thu 17 Oct 2019 10:06:44 + 0200


* Thu Sep 26 2019 - tech@adalin.org
- AeonWave (3.6.6) stable; urgency=low

 * Improved all instruments in the synthesizer instrument set.

-- Erik Hofman <tech@adalin.org>  Thu 26 Sep 2019 14:08:36 + 0200


* Thu Sep 19 2019 - tech@adalin.org
- AeonWave (3.6.5) stable; urgency=medium

 * Implement support for sampled-release after an AAX_STOP message.
 * Handle looping as specified in the smpl chunk of WAV files.
 * Handle WAV files with a datasize of 0 gracefully to prevent a crash.
 * Prevent a crash when calling aaxMixerGetSetup with NULL as a config parameter
 * Fix a case where specifying release="max" in aaxs files automatically
   resulted in an envelope following timed-gain filter.
 * Fix HRTF calculation, where the time delays of front-back and left-right
   where switched which makes a fairly big difference in the perception.
 * Fix a possible incorrect playback pitch for files included in the sound
   section of an aaxs file.
 * Fix support for brownian noise.

-- Erik Hofman <tech@adalin.org>  Thu 19 Sep 2019 11:16:43 + 0200


* Thu Aug 08 2019 - tech@adalin.org
- AeonWave (3.6.4) stable; urgency=medium

 * Switch to using the data-buffer handling code when handling stream ICY data
   to get much safer stream data handling.
 * Use the fastest path for waveform generation which might or might not be SIMD
 * Get ARM support up to par with x86 support again, and add support for VFPv4.
 * Speed up the bitcrusher filter for SSE2 and NEON systems by a factor of two.
 * Fix the bit-crusher filter for non-accelerated architectures.
 * Fix a streaming problem where the pdmp3_info function was always used,
   even with libmpg123 installed.

-- Erik Hofman <tech@adalin.org>  Thu 08 Aug 2019 20:08:27 + 0200


* Fri Jul 19 2019 - tech@adalin.org
- AeonWave (3.6.3) stable; urgency=medium

 * 4x increase in waveform generation speed.
 * Fix a buffer overflow when capturing with ALSA

-- Erik Hofman <tech@adalin.org>  Fri 19 Jul 2019 19:07:19 + 0200


* Fri Jul 12 2019 - tech@adalin.org
- AeonWave (3.6.2) stable; urgency=medium

 * Reduce waveform generation overhead.
 * Add the option to retrieve the system capabilities by calling
   aaxMixerGetSetup with AAX_CAPABILITIES as the type parameter.
 * Fix a possible read beyond a buffer length when handling AAXS files.
 * Fix OGG streams, a missing OGG framing-bit is not a reason to discard a
   stream as invalid.

-- Erik Hofman <tech@adalin.org>  Fri 12 Jul 2019 15:21:59 + 0200


* Tue Jul 02 2019 - tech@adalin.org
- AeonWave (3.6.1) stable; urgency=high

 * Fix a massive buffer overflow when both reverb and delay are defined for
   and audio frame. This was discovered by valgrind.

-- Erik Hofman <tech@adalin.org>  Tue 02 Jul 2019 14:14:03 + 0200


* Tue Jun 25 2019 - tech@adalin.org
- AeonWave (3.6.0) stable; urgency=low

 * Further work to support General MIDI 2.0
 * Combine phasing, chorus and flanging into the chorus effect.
 * Implement frequency-filtering of the delayed signal for phasing and chorus.
 * Introduce envelope-following timed gain filters (with exponential decay).
 * Allow one to override the shared data directory in the configuration file.
 * Improvements to the handling of mangled audio-streams and harden the ICY
   stream data handling code.
 * Fix a buffer issue where small parts of the buffer where added twice when
   the frequency filter and the flanging effect were applied to an audio-frame.
 * Fix a hardly noticeable sound artefact when the resampling factor == 1.0
 * Fix reverb, the volume of the delayed signal was handled improperly.
 * Small code speedups.

-- Erik Hofman <tech@adalin.org>  Tue 25 Jun 2019 09:30:11 + 0200


* Tue Feb 19 2019 - tech@adalin.org
- AeonWave (3.5.7) stable; urgency=medium

 * Support URL redirects for the HTTP protocol.
 * Skip frequencies which are higher than the Nyquist frequency when
   synthesizing sounds.
 * Add dithering when converting to a lower number of bits in the final mix.
 * Support General MIDI 2.0 specifications, add support for setting modulation,
   chorus and frequency filter parameters in the instrument class. Do not
   apply many effects to the drum channels.
 * Allow setting a default panning value in the info section of AAXS files.
 * Fix a bug where an incorrect data pointer was freed when the code decided
   to swap the low-frequency part and high-frequency part of the equalizer.
 * Leave the loop when finished destroying the buffer in the AeonWave class,
   preventing a possible segmentation fault.
 * Fix frequency filter cutoff behavior for > 12dB/Oct filters, the coefficients
   where not selected properly.
 * Fix the naming of aaxSensorGetMatrix64 and aaxAudioFrameGetMatrix64.

 In loving memory of my beloved cat Tux who was always there for me for the last
 eighteen years if things didn't work out they way I was hoping for.
 Rest in peace my little friend.

-- Erik Hofman <tech@adalin.org>  Tue 19 Feb 2019 10:03:19 + 0100


* Wed Dec 19 2018 - tech@adalin.org
- AeonWave (3.5.6) stable; urgency=medium

 * Fix a segmentation fault in case of a (intentionally) corrupt AAXS file.
   Parse the socket or file reported size to the binary-format so the number
   of samples (with pcm8u samples) matches the number of bytes it reports back.
 * Add a few new instruments.

-- Erik Hofman <tech@adalin.org>  Wed 19 Dec 2018 13:55:31 + 0100


* Sat Dec 08 2018 - tech@adalin.org
- AeonWave (3.5.5) stable; urgency=low

 * 3x to 8x speedup of batched RMS calculation.
 * Speed up of about 25% for frequency filters.
 * Massive speedup for audio-frames with no active sound emitters.
 * Allow Bessel filters with orders other than 12dB/Oct in AAXS files.

-- Erik Hofman <tech@adalin.org>  Sat 08 Dec 2018 10:17:08 + 0100


* Wed Dec 05 2018 - tech@adalin.org
- AeonWave (3.5.4) stable; urgency=high

 * Add support for the fma3 and fma4 instructions.
 * Fix a bug where data of filters or effects could be accessed when it
   was freed already. This was a leftover of the data swapping change.
 * Improve the way filters and effects swap their data structures.

-- Erik Hofman <tech@adalin.org>  Wed 05 Dec 2018 10:06:08 + 0100


* Fri Dec 01 2018 - tech@adalin.org
- AeonWave (3.5.3) stable; urgency=high

 * Implement after-touch using pitch in the Instrument class.
 * Fix a number of memory related issues as reported by valgrind.
 * Switch from swapping data structure-pointers to copying the contents of the
   data structure when assigning filters and effects. This prevents that the
   filter or effcect destroy-function will destroy a data structure which might
   still be in use by a thread.

-- Erik Hofman <tech@adalin.org>  Fri 01 Dec 2018 13:49:08 + 0100


* Wed Nov 07 2018 - tech@adalin.org
- AeonWave (3.5.2) stable; urgency=low

 * Improve various instrument configurations.
 * Speed and acuracy improvements for volume ramps (also used by the timed-gain
   filter).
 * Fix an audible glitch when resetting (re-initializing) emitters.

-- Erik Hofman <tech@adalin.org>  Wed 07 Nov 2018 14:05:08 + 0100


* Sat Oct 13 2018 - tech@adalin.org
- AeonWave (3.5.1) stable; urgency=low

 * Improve various instrument configurations.
 * Fix some more issues with the timed gain filter and timed pitch effect.
 * Remove a debugging statement.

-- Erik Hofman <tech@adalin.org>  Sat 13 Oct 2018 10:37:00 + 0200


* Thu Sep 27 2018 - tech@adalin.org
- AeonWave (3.5.0) stable; urgency=low

 * Add the option to set the location of the shared-data directory at runtime
   using the new aaxDriverSetSetup function.
 * Add a C++ instrument header file which can be used to simulate a single,
   complete, musical instrument. And use it for the MIDI playback code.
 * Re-initialize the emitter after it is set to suspended. This makes the
   emitter ready for the next playing state.
 * Fix a possible race condition when using tied properties.
 * Fix some issues with the timed gain filter and timed pitch effect.
 * Fix an issue when two registered audio-frames both use a delay effect.
 * Add the option to define the loop staring point and loop end point in AAXS
   files that include a file in the sound section.
 * Allow AAXS defined filters and effects to be set as optional, in which case
   they will be omitted on systems which are low on resources (CPU and memory).
 * AAXS generated buffers will now use mipmapping to extend the pitch range
   beyond a pitch level of 32.

-- Erik Hofman <tech@adalin.org>  Thu 27 Sep 2018 09:13:00 + 0200


* Wed Aug 01 2018 - tech@adalin.org
- AeonWave (3.4.0) stable; urgency=low

 * Add support for the ISO9613-1 specified distance attenuation model.
 * If the ISO9613-1 distance  model is applied, and the velocity effect was not
   yet set, then the corresponding speed of sound will be set automatically.
 * If the source has stopped then finish the current time envelope and stop,
   otherwise an evelope with repeat set to max will never stop until the
   emitter is set to processed.
 * Add a RingModulator effect, mainly to be able to simulate atmospheric
   anomalies for wireless communications. But useful for other purposes too.
 * Remove debugging output from ogg streaming code.

-- Erik Hofman <tech@adalin.org>  Wed 01 Aug 2018 11:00:00 + 0200


* Fri Jul 20 2018 - tech@adalin.org
- AeonWave (3.3.0) stable; urgency=low

 * Automatically convert an effect name like "effects/nature/birds" to a full
   path name using APP_DATA_DIR when it is parsed to the buffer retrieving
   function of the AeonWave class.
 * Add a Param class which encapsulates a float variable and which can
   be tied to a DSP parameter. Every time the param gets a new value
   assigned the DSP parameter will be updated too.
 * Fix a small problem with stopping an emitter which has a timed-gain envelope
   defined with one of the time settings to "inf". They should now finish
   properly after the emitter is requested to stop playing.
 * Overhaul of the C++ classes to make them C++11 compliant.
 * Remove support for an ancient way of handling config files.
 * Prevent a crash when the state of the timed-gain filter or timed-pitch effect
   is not set before it is registered the sensor, audioframe or emitter.

-- Erik Hofman <tech@adalin.org>  Fri 20 Jul 2018 14:01:00 + 0200


* Tue Jul 03 2018 - tech@adalin.org
- AeonWave (3.2.3) stable; urgency=low
 * Fix a missing offset(enum aaxType) error for the AeonWave class.
 * Fix a problem with AAX_SHARED_DATA_DIR support for Windows.

-- Erik Hofman <tech@adalin.org>  Tue 03 Jul 2018 08:49:00 + 0200


* Sat Jun 30 2018 - tech@adalin.org
- AeonWave (3.2.2) stable; urgency=medium
 * Add the AAX_PCM24S_PACKED format for 3-byte packed 24-bit samples.
   AAX_PCM24S is used for 32-bit encoded 24-bit samples.
 * Fix 24-bit packed PCM data handling.
 * Fix a possible stream synchronization problem at the start of streams
   that support ICY metadata song information.

-- Erik Hofman <tech@adalin.org>  Sat 30 Jun 2018 11:06:00 + 0200


* Sat Jun 23 2018 - tech@adalin.org
- AeonWave (3.2.1) stable; urgency=low
 * Improve timing for some backends by using a regular interval method
   instead of waiting just a number of milliseconds from the time of calling.
   This moslty affected OSS and SDL backends.
 * Move the mixing code from the callback to the backend-thread for the SDL
   backend reducing the time spent in the callers code to a mere memcopy.
 * Enable the SDL directsound backend for Windows XP.
 * Rename the angular filter (which was lost in translation) to directional
   filter. For backwards compatibility the angular name is still being
   recognized internally and the library is binary compatible with previous
   versions.

-- Erik Hofman <tech@adalin.org>  Sat 23 Jun 2018 12:31:00 + 0200


* Sat Jun 16 2018 - tech@adalin.org
- AeonWave (3.2.0) stable; urgency=high
 * Add SDL audio support for backends AeonWave does not support natively.
   This potentially opens up the option to use AeonWave on MacOS and BSD.
   SDL 2.0.5 or later is required.
 * Allow retrieving the data directory which AeonWave uses to store shared data
   like preset files by calling aaxDriverGetSetup(cfg, AAX_SHARED_DATA_DIR)
 * Allow defining AAX_ENVELOPE_FOLLOW or AAX_INVERSE_ENVELOPE_FOLLOW alongside
   the waveform type to control the noise behavior when setting the state for
   the bitcrusher filter. The default behavior is still a constant noise level.
 * Fix a number of potential buffer overflows when enumerating the available
   backend interfaces.
 * Fix a number of one-off memory leaks.

-- Erik Hofman <tech@adalin.org>  Sat 16 Jun 2018 13:30:00 + 0200


* Tue Jun 05 2018 - tech@adalin.org
- AeonWave (3.1.2) stable; urgency=low
 * Add the bitcrusher filter to simulate (communication line) sound degradation.
 * Delever on the promis that one can add a named, but empty, buffer in
   case aaxBufferReadFromStream fails when calling buffer() from the
   aeonwave class.

-- Erik Hofman <tech@adalin.org>  Tue 05 Jun 2018 20:48:00 + 0200


* Fri Jun 01 2018 - tech@adalin.org
- AeonWave (3.1.1) stable; urgency=medium
 * Add the aaxPlaySoundLogo() function to play back the official sound
   logo at the requested device.
 * Add the option to mark an LFO based filter or effect 'stereo' for
   audio-frames.
 * Fix volume glitches for dynamic-gain and timed-gain filters
 * Account for the fact that pink-noise and brownian-noise both have a lowest
   cut-off frequency of 100Hz. Which can be used to create continuous noise
   instead of noise with possible volume glitches.
 * Fix a case where LFO filters and/or effects could be initialized improperly
   for use with audio-frames.

-- Erik Hofman <tech@adalin.org>  Fri 01 Jun 2018 15:15:00 + 0200


* Sat May 21 2018 - tech@adalin.org
- AeonWave (3.1.0) stable; urgency=high
 * Explicitly allow GPL version 2 and GPL version 3 applications to use
   the library.
 * Add distance filter frequency response.
 * Speed up waveform generation quite a bit.
 * Turn the reverb effect into a true 3d effect.
 * Add the option to register the reverb effect to audio-frames.
   - Due to memory considerations they only support up to large room sizes,
    any reflections with a larger delay will be ignored.
 * Add the option to define audio-frames as indoor by setting AAX_POSITION
   to AAX_INDOOR when calling aaxAudioFrameSetMode. It is possible to combine
   AAX_INDOOR with AAX_RELATIVE or AAX_ABSOLUTE (the default when omitted).
   This allows for indoor sound propagation where every audio-frame represents
   a room or a section of a room. Reverb and frequency filters can be used
   to simulate the properties of the room section defined by the audio-frame.
   By specifying the audio-frame indoor, sound will not become directional until
   it arives at the scene of the listener.
 * Add the option to define occlusion object parameters to the volume-filter
   and reverb-effect, which will influence the sound properties of the direct
   path of the sound.
 * Harden the matrix multiplication code so it will be more correct in more
   situations. A smaller update-rate than the refresh-rate could cause emitter
   and parent-frame data to be out of sync. Also absolute positions are handled
   better now.
 * Fix a mistake in 32-bit matrix calculations caused by copying just one
   row instead of all rows.
 * Add support for a static parametric-equalizer within the <sound/> section
   of AAXS files.
 * Increase the http stream timeout value. The default was too low.
 * Protect against deregistering an unregistered audio-frame or emitter.

-- Erik Hofman <tech@adalin.org>  Sat 21 May 2018 13:44:00 + 0200


* Fri Jan 05 2018 - tech@adalin.org
- AeonWave (3.0.11) stable; urgency=low
 * Fix a speed regression for matrix multiplications.
 * Add the 'auto-sustain' option for filters and effects which calculates the
   sustain time by subtracting the logarithmic frequency value multiplied by
   the auto-sustain value from the original value.

-- Erik Hofman <tech@adalin.org>  Fri 05 Jan 2018 13:57:00 + 0100


* Sun Dec 24 2017 - tech@adalin.org
- AeonWave (3.0.10) stable; urgency=medium
 * Considerably speed up envelope following calcualtion.
 * Add the option to define the duration of the waveform generated by the sound
   section of an AAXS file. The minimum duration is 1 second.
 * Allow pitch to be set as an attribute for frequency related parameters in
   filters and effects of AAXS files. The frequency then becomes pitch
   multiplied by the frequency defined in the sound section.
 * Protect against unrecognized filter or effect type definitions in AAXS files.
 * Fix audio device detection on Linux if Pulse Audio is inactive.
 * Fix the case where filters in the sound section of AAXS files could only
   be 12dB/Oct.

-- Erik Hofman <tech@adalin.org>  Sun 24 Dec 2017 14:32:00 + 0100


* Thu Dec 05 2017 - tech@adalin.org
- AeonWave (3.0.9) stable; urgency=low
 * Prevent an endless loop for mangled wav files.
 * Waveforms, filters and effects in the sound section of an AAXS file now are
   processed in the order of appearance which means a created waveform may be
   filtered before adding, mixing or modulating other waveforms.
 * Fix static frequency filter anomalies at the loop points of AAXS defined
   waveforms.

-- Erik Hofman <tech@adalin.org>  Tue 05 Dec 2017 11:22:00 + 0100


* Thu Nov 11 2017 - tech@adalin.org
- AeonWave (3.0.8) stable; urgency=low
 * Fix a problem for AAXS buffers added to AudioFrames.
 * Fix detecting directories with a dot in the name as not being a remote host.
   e.g. 'sound.dir/file.mp3"

-- Erik Hofman <tech@adalin.org>  Thu, 11 Nov 2017 13:44:00 + 0100


* Tue Nov  7 2017 - tech@adalin.org
- AeonWave (3.0.7) stable; urgency=low
 * Fix a problem where large AAXS files where truncated.
 * Reorganize the filter and effect cleanup for emitters, audio-frames and the
   sensor.
 * Add support for a static frequency filter and a static distortion effect
   within the <sound/> section.

-- Erik Hofman <tech@adalin.org>  Tue,  7 Nov 2017 13:19:00 + 0100


* Tue Oct 31 2017 - tech@adalin.org
- AeonWave (3.0.6) stable; urgency=low
 * Postpone initialization of AAXS filter and effect code for emitters to
   make sure they will be set after initializing the mixer which could change
   parameters like the refresh rate. As a bonus it is now possible to stream
   different AAXS buffers one after the other.
 * Reduce getaddrinfo timeout considerably by specifying ai_family = AF_INET
 * Fix a bug where a suspended configuration could not be resumed.

-- Erik Hofman <tech@adalin.org>  Tue, 31 Oct 2017 10:03:00 + 0200


* Sat Oct 21 2017 - tech@adalin.org
- AeonWave (3.0.5) stable; urgency=low
 * Add the aaxGetFrequencyFilterTypeByName function.
 * Restructure the filter and effects code a bit to make it easier to remove
   allocated data. And use the new functionality.
 * Add function to the C++ support class to get the type, waveform_type,
   frequency_filter_type and distance_model by name

-- Erik Hofman <tech@adalin.org>  Sat, 21 Oct 2017 13:39:00 + 0200


* Mon Oct  9 2017 - tech@adalin.org
- AeonWave (3.0.4) stable; urgency=low
 * Add the option to repeat the timed-gain filter for a specified number of
   times. This could be useful for repeating sounds like alarm and clock sounds.
   If a timed-pitch effect is present for the same emitter then it will repeat
   at the same moment the timed-gain filter restarts.
 * Fix the buffer length when a file is specified for the sound section of an
   AAXS file.

-- Erik Hofman <tech@adalin.org>  Mon, 09 Oct 2017 14:16:00 + 0200


* Tue Oct  3 2017 - tech@adalin.org
- AeonWave (3.0.3) stable; urgency=medium
 * Fix playback support to mp3 files.
 * Support WAV files with LIST adtl, bext, cue and smpl tags.
 * Allow specifying a file attribute in the sound section of AAXS files.
 * Allow processing, pitch, ratio and staticiy to be attributes instead of
   subnodes of the XML waveform node for a shorter notation of the sound
   definition.
 * Fix a possible segmentation fault when a requested WAV file was not found.

-- Erik Hofman <tech@adalin.org>  Tue, 03 Oct 2017 13:33:00 + 0200


* Fri Sep 29 2017 - tech@adalin.org
- AeonWave (3.0.2) stable; urgency=medium
 * Add a function to add a buffer to the dsp class.
 * Fix a bug in the matrix code which could create a stack smash.

-- Erik Hofman <tech@adalin.org>  Fri, 29 Sep 2017 09:08:00 + 0200

* Sat Sep 23 2017 - tech@adalin.org
- AeonWave (3.0.1) stable; urgency=medium
 * Add a function to get the distance model by name.
 * use the proper distance model if type is DISTANCE for AAXS defined filters.
 * Add functions to add a buffer object to the AeonWave and Frame classes.
 * Add the option to retrieve the original AAXS file when calling
   aaxBufferGetData when the buffer format is AAX_AAXS16S or AAX_AAXS24S.
 * Fix a few bugs for unusual situations in the new streaming code.

-- Erik Hofman <tech@adalin.org>  Sat, 23 Sep 2017 09:08:00 + 0200


* Sun Sep 17 2017 - tech@adalin.org
- AeonWave (3.0.0) stable; urgency=low
 * Switch to a dual licensing model with both GPL and a commercial license.
 * Switch to 64-bit build for windows and renamed the library to AeonWave.
 * Switch to 64-bit matrices for position and orientation.
 * Improve general rendering speed with about 30 percent.
 * Reorginze the streaming code to make it more flexible.
 * Add read support for Ogg/Vorbis using the Public Domain stb_vorbis code.
 * Add support for WAV embedded MP3 files.
 * Add support for native AAXS files when calling aaxBufferReadFromStream.
 * Support proper distortion (not clipping) when the gain of generated
   waveforms becomes (too) large
 * Add the option to define filters and effects in an AAXS file. These will
   get applied automatically when the buffer is added to an emitter, the mixer
   or audio frames.
 * Add the aaxAudioFrameAddBuffer and aaxMixerAddBuffer functions to be able to
   assign AAXS buffers with filter and effect information to audio-frames and
   the mixer.
 * Add a functions to get filter and effect types by name.
 * Add functions to get a conversion-type and to get a waveform-type by name.
 * Add a convolution effect to simulate acoustics based on an audio buffer.
   Note: This is a resource heavy effect, use with care.
 * Changed the return types of all filter and effect functions (except for the
   Create functions) for aaxFilter/aaxEffect to match the rest of the API.
   Note: This might require client side code changes.
 * Fixed some lingering header mistakes. This makes version 3.0 binary
   incompatible with earlier version. Recompilig is required.
 * Removed version 1.0 compatibility header files.
 * Renamed the C++ interface() functions to interface_name() since some projects
   undefine 'interface' causing the preprocessor to hide these functions.
 * Make sure that capturing does not stagnate the engine when a (http) stream
   stalls.
 * Fix a bug where modulating waveforms by non-sine waveforms caused silence.
 * Fix a segmentation fault when a particular file extension does not
   support writing.
 * Fix a problem where the looping mode was not preserved when a buffer was
   added to the emitter after the looping mode was set.
 * Fix a possible memory leak when a filter or effect was toggled between
   inactive and active again.
 * Fix reporting of min/max tracks and frequency for OSS v3

-- Erik Hofman <tech@adalin.org>  Sun, 17 Sep 2017 09:51:00 + 0200

* Fri Jul 29 2016 - tech@adalin.org
- AeonWave (2.7.0) stable; urgency=low
 * Add aeonwave.hpp, a header file only AeonWave C++ abstraction API.
 * Add AAX_RELEASE_MODE to disable most of the error checking.
 * Add aaxDriverGetErrorNo() and assign errors to the specific driver handle.
 * Prevent aaxDriver close from generating an error if handle == 0.0
 * Prevent a segmentation fault for invalidated remote streaming hosts.
 * Prevent a segmentation fault when handle == 0 for aaxAudioFrameDestroy,
   aaxEmitterAddBuffer and aaxEmitterRemoveBuffer.

-- Erik Hofman <tech@adalin.org>  Fri, 29 Jul 2016 11:13:00 + 0100

* Fri Oct 15 2015 - tech@adalin.org
- AeonWave (2.6.1) stable; urgency=low
 * Fix a few border case tests for mixer configuration.
 * Make sure testing for 'AAX_frequency_filter' also works even though
   'AAX_frequency_filter_1.1' is defined.
 * Fix a mostly unnoticeable mistake for envelope following distortion filter.
 * Provide a more verbose renderer string for ALSA

-- Erik Hofman <tech@adalin.org>  Fri, 15 Oct 2015 10:49:00 + 0200

* Mon Aug 31 2015 - tech@adalin.org
- AeonWave (2.6.0) stable; urgency=low
 * Rewrote the loop-point and buffer switching code for better loop handling.
 * Don't use hardware volume when the number of subdevices exceeds 1 for ALSA.
 * Add a AAX_FORWARD_GAIN parameter for donut shaped sound distribution.
 * A major overhaul of the frequency filter
   - Speed up the filter execution time.
   - Add support for 6dB/Oct, 24dB/oct, 36dB/oct and 48dB/oct filtering,
     12dB/oct is the default.
   - Add support for both Butterworth and Bessel filter types,
     Butterworth is the default.
 * Allow the paramtertic equalizer parameters to be defined more flexible by
   allowig LP-LP-HP type setups in addition to HP-LP-HP.
 * Add the option to define a paramtertic equalizer at every audio-frame which
   will be applied after all filters and effects (incl. the frequency filter).
 * Speed improvements for the graphic and paramtetric equalizers.
 * Add a surround sound crossover filter for 5.1 and 7.1 systems
   defined at 80Hz and 24dB/oct.
 * HRTF improvements.
 * Improve (white)noise waveform frequency spectrum spread.
 * Fix a possible segmentation fault for audio-frame-registered emitters that
   use delay effects.

-- Erik Hofman <tech@adalin.org>  Mon, 31 Aug 2015 17:53:00 + 0200

* Wed Mar 25 2015 - tech@adalin.org
- AeonWave (2.5.3) stable; urgency=low
 * Decrease memory consumption considerably for loopback-capture and
  slightly for streaming sensors.

-- Erik Hofman <tech@adalin.org>  Wed, 25 Mar 2015 15:33:00 + 0100

* Fri Mar 06 2015 - tech@adalin.org
- AeonWave (2.5.2) stable; urgency=low
 * Fix Auto-Wah and other time based effects

-- Erik Hofman <tech@adalin.org>  Fri, 06 Mar 2015 13:46:00 + 0100

* Fri Feb 27 2015 - tech@adalin.org
- AeonWave (2.5.1) stable; urgency=low
 * Better support for 'Generic Software' and 'Generic Hardware' for Windows
   OpenAL emulation.
 * Fix stream length reporting on 32-bit architerctures.
 * Lower the socket receive buffer to minimize stream delays.
 * Set the network timeout to at least 0.5 seconds.
 * Fix a rare crash when destroying the sensor.

 -- Erik Hofman <tech@adalin.org>  Fri, 27 Feb 2015 12:27:00 + 0100

* Fri Feb 20 2015 - tech@adalin.org
- AeonWave (2.5.0) stable; urgency=low
 * Added a capabilities interface to detect the limits of the audio hardware
   by making calls to the aaxMixerGetSetup function.
 * Changed the threading model from one thread per mixer-registered audio-frame
   to a load-balancing threadpool model. This slightly increases the work the
   CPU has to do but divides the wall time spent on rendering by the number of
   physical cores. Threading is now always active on multi-core systems except
   when the environment variable AAX_USE_THREADPOOL is set to 0.
 * Add support for the ARM architecture including support for hardware FPU
   and NEON. Rendering performance is comparible with Intel/AMD Cores
   at a matching CPU frequency.
 * Support defining a default output device in the confguration file.
 * Fix a problem when a registered sensor had a different number of
   audio periods in relation to the playback device.
 * Fix an emitter looping bug introduced in version 2.4.1
 * Support URL parsing for the file backend and properly handle HTTP streaming
   (READ mode only).
 * Support batched (fast, non-realtime) mode for Audio Files and Loopback.
 * The file writing backend postpones writing of the file header to until
   after the state is set to AAX_PLAYING.
 * The file backend can now return song meta data.
 * Install to the proper system directory on 64-bit Windows

 -- Erik Hofman <tech@adalin.org>  Fri, 20 Feb 2015 09:15:00 + 0100

* Tue Jun 10 2014 - tech@adalin.org
- AeonWave (2.4.1) stable; urgency=low
 * Fixed a possible segmentation fault with certain ALSA drivers.
 * Fixed a possible segmentation fault for looping emitters.

 -- Erik Hofman <tech@adalin.org>  Tue, 10 Jun 2014 12:58:00 + 0200

* Wed May 21 2014 - tech@adalin.org
- AeonWave (2.4.0) stable; urgency=low
 * Changed the conditions for binary distribution;
   The library may now be included in commercial and non commercial projects
   provided the user is made aware of the option to upgrade to the HD version.
   See Copyright section 2.1; Rights and Limitations of Grant.
 * Reorganized the code to support different hardware rendering schemes in
   the future. As a result the current rendering speed has increased 25% to 75%
   (depending of the computer hardware, older hardware profit the most).
 * Add the option to use timer-based rendering instead of interrupt-based
   rendering for ALSA (experimental).
 * Fix a problem where the WASAPI device period could become lower than the
   minimum allowed period for that particular device.
 * Switched to a new xml configuration file format.
   Both the old and the new formats will be supported up to version 3.0.0
 * Allow custom pcm devices (defined in .asoundrc) for ALSA.
 * Tweaked Surround Sound, Spatial and HRTF playback.
 * Support WAV files with a LIST section.
 * Fix Auto generated waveform loop-points.
 * Fix a problem with capture-only backends

 -- Erik Hofman <tech@adalin.org>  Wed, 21 Mar 2014 10:45:00 +0200

* Sat Dec 21 2013 - tech@adalin.org
- AeonWave (2.3.4) stable; urgency=high
 * Fix a problem where distance delayed objects that where registered at
   the mixer or an audio-frame in non-playing mode started with the wrong
   position and orientation matrix causing unwanted delays.
 * Fix an incorrect header problem while streaming mp3 files.
 * Fix a stupid error where AeonWave-Lite didn't initialize correctly.
 * Fix volume handling for windows devices without hardware volume support.
 * Activate AVX instruction support.

 -- Erik Hofman <tech@adalin.org>  Sat, 21 Dec 2013 11:21:00 +0100

* Mon Nov 25 2013 - tech@adalin.org
- AeonWave (2.3.3) stable; urgency=medium
 * Fix a problem with files with a .wav extension that aren't.
 * Prevent destroying of the emitter unless it is in the AAX_PROCESSED state.

 -- Erik Hofman <tech@adalin.org>  Mon, 25 Nov 2013 12:34:00 +0100

* Tue Nov 21 2013 - tech@adalin.org
- AeonWave (2.3.2) stable; urgency=medium
 * Fix clipping during spoken text under certain conditions.
 * Fix a problem where the equalizer was turned off under certain conditions.
 * Fix incorrect file-type handling for the Audio Files backend and add proper
   error reporting to the calling program.

 -- Erik Hofman <tech@adalin.org>  Tue, 21 Nov 2013 13:21:00 +0100

* Sun Nov 14 2013 - tech@adalin.org
- AeonWave (2.3.1) stable; urgency=high
 * Complete rewrite of the File backend
   - Add mp3 file output support if libmp3lame is found.
   - Add support for more WAV file types and fix mulaw and alaw decoding.
 * Add the option to register one sensor opened in write mode (file only) at
   the mixer to support a dedicated record to file option.
 * Fix a major registered-sensor bug (most noticeable on Windows).
 * Fix an occasional deadlock when deregistering audio-frames.

 -- Erik Hofman <tech@adalin.org>  Sun, 14 Nov 2013 15:14:00 +0200

* Fri Oct 18 2013 - tech@adalin.org
- AeonWave (2.3.0) stable; urgency=high
 * Distance-delay mode now adds delayed state changes in addition to delayed
   start/stop. State changes include; pitch, gain, position, orientation and
   velocity.
 * Added sense of height to Surround sound; emitters can now be heard above
   and below the speakers. This is best perceived if the speakers and the
   listeners ears are (almost) in the same horizontal plane.
 * Add support for the AAXS (AeonWave Auto-generated XML Sound) audio format.
 * Add double precision 64-bit floating point matrix support functions.
 * Implement hardware volume support for ALSA and WASAPI.
   - hardware volume is adjusted within hardware boundaries, volume settings
     outside the hardware range are adjusted using software fall-back.
   - the volume filter now reports the hardware minimum and maximum.
 * Implement Auto-Gain Control with a user definable adjust-rate.
 * Add the option to select stereo, mono-left, mono-right or mono-mix for
   audio capturing.
 * Add an aaxMixerGetState function to retrieve the state of the current
   audio stream. This can for instance be used to reinitialize the device
   after the hardware audio format has changed.
 * Add the option to set the number of times to loop a buffer.
 * Fixed reported bugs.
   - Fix an issue that prevented ALSA from reporting new hardware while an
     application was running.
   - Fix an issue with loop-back capturing of the playback stream.
   - Fix an issue with flanging for emitters registered at the final mixer.
   - Fix an issue that affected HRTF and Surround sound playback.

 -- Erik Hofman <tech@adalin.org>  Mon, 27 Aug 2013 08:27:00 +0200


* Fri Mar 08 2013 - tech@adalin.org
- AeonWave (2.2.4) stable; urgency=low
 * Add an aaxFree function to free memory allocated by the library.
   This might be necessary when using different compilers.
 * Add support for a Reverb effect which only applies to the final mixer.
 * Make the dynamic-gain envelope-following mode a proper audio-compressor and
   expander with noise gate. The offset property defines the threshold level.
 * Add the option to retrieve the compression level for every track.
 * Add an aaxAudioFrameGetSetup function to be able to retrieve the above.
 * Add the ability to retrieve peak and average audio levers for every track
   (final mixer only).
 * Fix distortion behavior, it was over compressing for high distortion factors.
 * Add an envelope following option for the distortion effect.
 * Remove some duplicate code, most code is now shared between the mixer and
   audio-(sub)frames which should lead to fewer case specific problems.
 * Fix LFO situations where changing the LFO values could become out of bounds.
 * Fix filters and effects for registered sensors.
 * Overhaul of the Windows backend and threads code.
   - Fix a lot of corner case situations that failed before.
   - Improve runtime performance considerably.
   - Fix registered sensors.
 * Allow sensors to be registered at sub-frames.
 * Expose the driver latency.

 -- Erik Hofman <tech@adalin.org>  Fri, 08 Mar 2013 12:32:00 +0200


* Tue Aug 21 2012 - tech@adalin.org
- AeonWave (2.2.3) stable; urgency=high
  * Fix a naming clash between ZeroXML and libxml2. The function names of the
    library were inadvertently exposed.
  * Sanitize the slot parameters for Filters and Effects when calling their
    respective SetState function to prevent possible buffer overflows.

 -- Erik Hofman <tech@adalin.org>  Tue, 21 Aug 2012 10:34:00 +0200


* Tue Jul 31 2012 - tech@adalin.org
- AeonWave (2.2.2) stable; urgency=medium
  * Fix a delay effects (phasing, chorus, flanging) problem that was introduced
    by the off-by-one fix for streaming audio with a low sample frequency.
  * Fix IMA4 support for WAV file capturing and playback on non file backends.
  * Fix end-of-file problem that could cause a segmentation fault.
  * Fix an off-by-one problem for the loopback device.

 -- Erik Hofman <tech@adalin.org>  Tue, 31 Jul 2012 13:10:00 +0200


* Mon Jul 16 2012 - tech@adalin.org
- AeonWave (2.2.1) stable; urgency=low
  * Added native support for Windows (Vista or later).
  * A complete overhaul of the File backend;
    - added file capturing support and support for different output formats.
    - added the infrastructure to detect and handle different audio file-formats
      + WAV files are always supported for input and output.
      + MP3 file (input) is supported if libmpg123 is installed.
  * Fix the default ALSA device for when PulseAudio isn't active.
  * Fix an off by one problem for streaming audio with a low sample frequency
    compared to the mixer frequency.
  * Fix a problem where multiple open backends in the same application could
    not have different rendering types (HRTF/Stereo/Spatial/Surround).
  * Moved the include files aax.h to aax/aax.h and aaxdefs.h to aax/defines.h
    and provide stubs that automatically include the correct header file.
  * Moved the configuration file from ~/.aaxconfig.xml to ~/.aax/config.xml
    and added code that automatically moves the old configuration file to the
    new location if it doesn't yet exist.
  * Made the aaxDriverGetInterface functions more reliable by storing interface
    description for every opened device (as a bonus this also causes less
    kernel audio device detection calls).

 -- Erik Hofman <tech@adalin.org>  Mon, 16 Jul 2012 10:45:00 +0200


* Tue May 01 2012 - tech@adalin.org
- AeonWave (2.2.0) stable; urgency=low
  * Added an 8 band graphical equalizer for the final mixer stage.
  * Added an envelope following option for filters and effects (auto-wah).
  * Added seamless transition from tube-like soft-clipping to sharp-clipping
    and add an asymmetric clipping option. This is most noticeable for
    the distortion effect.
  * Added support for registered sensors. Registering an aaxConfig handle
    which is opened in AAX_MODE_READ mode eliminates the need for the
    application to do buffer handling between the physical input device and
    an emitter. It also improves latency since reading the buffer and
    processing it's contents is done in a single step.
    Registered sensors are only guaranteed in stereo mode for this release.
  * Added support for subframes. Subframes are like regular audio-frames
    but they are registered at other audio-frames. Where audio-frames
    render in their own thread, subframes will render in their parents thread.
  - This removes any limit to the number of supported emitters as long as the
    system can handle the load. The maximum number of registered emitters,
    sensors and subframes per audio frame is still 256.
  * Move the speaker setup from the global section to device specific section
    in the configuration file. This allows for different setups for headphone
    connections and (for example) 4 channel spatialised speaker setup.
  * Added support for a dedicated configuration file entry for every device.
  * Added the inverse of the modulation-waveform for filters and effects.
  * Added the option to modify the Q (resonance) factor of frequency filters.
  * A complete overhaul of the recording code and of the ALSA backend.
  * Fixed filter and effect support for streaming audio.
  * Added a resampling option for fetching buffer data.
  * Speed-up of filter and effect processing.
  * Added flanging effect.
  * Dozens of small fixes.

 -- Erik Hofman <tech@adalin.org>  Tue, 01 May 2012 10:31:05 +0200


* Fri Nov 11 2011 - <tech@adalin.org>
- AeonWave (2.1.2) stable; urgency=medium
  * Fix some possible type conversion problems
  * Fix a possible dead-lock situation

 -- Erik Hofman <tech@adalin.org>  Fri, 11 Nov 2011 15:33:00 +0100


* Mon Oct 10 2011 - <tech@adalin.org>
- AeonWave (2.1.0) stable; urgency=low

  * Added waveform generator
  * Added timed-gain filter and timed-pitch effect (envelopes)
  * Assorted small bug-fixes and usability updates.

 -- Erik Hofman <tech@adalin.org>  Mon, 10 Oct 2011 11:05:00 +0100


* Tue Aug 27 2011 - <tech@adalin.org>
- AeonWave (2.0.0) stable; urgency=low

  * Added hardware acceleration
  * Added submixing capable audio-frames
  * Added support for Filters and Effects
  * New simplified, robust and consistent API
  * New spatialised speaker setup

 -- Erik Hofman <tech@adalin.org>  Tue, 27 Aug 2011 14:08:00 +0200


* Wed Dec 23 2009 - <tech@adalin.org>
- AeonWave (1.0.0) stable; urgency=low

  * Split up the AeonWave library and the OpenAL support code
  * New HRTF and Surround sound setups
  * Added matrix operations

 -- Erik Hofman <tech@adalin.org>  Wed, 23 Dec 2009 15:21:00 +0100


* Wed May 21 2008 - <tech@adalin.org>
- OpenAL (1.0.0) stable; urgency=low

  * Initial version following the Openal 1.1 specification

 -- Erik Hofman <erik@ehofman.com>  Wed, 21 May 2008 13:42:00 +0100

