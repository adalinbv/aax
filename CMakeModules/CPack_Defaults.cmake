
# Default to release build type
IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Release" CACHE INTERNAL "Release type")
ENDIF(NOT CMAKE_BUILD_TYPE)

# Set default libdir
IF(NOT DEFINED CMAKE_INSTALL_LIBDIR)
  SET(CMAKE_INSTALL_LIBDIR "lib" CACHE PATH "library destination directory")
ENDIF(NOT DEFINED CMAKE_INSTALL_LIBDIR)

# Set default bindir
IF(NOT DEFINED CMAKE_INSTALL_BINDIR)
  SET(CMAKE_INSTALL_BINDIR "bin" CACHE PATH "executable destination directory")
ENDIF(NOT DEFINED CMAKE_INSTALL_BINDIR)


# detect system type
IF(NOT DEFINED CPACK_SYSTEM_NAME)
  SET(CPACK_SYSTEM_NAME ${CMAKE_SYSTEM_NAME})
ENDIF(NOT DEFINED CPACK_SYSTEM_NAME)

IF (UNIX AND NOT WIN32)
  IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
    SET(CPACK_PACKAGE_ARCHITECTURE "x86_64")
  ELSE(CMAKE_SIZEOF_VOID_P EQUAL 8)
    SET(CPACK_PACKAGE_ARCHITECTURE "i386")
  ENDIF(CMAKE_SIZEOF_VOID_P EQUAL 8)

  If(NOT DEFINED CMAKE_LIBRARY_ARCHITECTURE)
     SET(CMAKE_LIBRARY_ARCHITECTURE "${CPACK_PACKAGE_ARCHITECTURE}-linux-gnu")
  ENDIF(NOT DEFINED CMAKE_LIBRARY_ARCHITECTURE)

  SET(CMAKE_INSTALL_LIBDIR lib/${CMAKE_LIBRARY_ARCHITECTURE} CACHE PATH "Output directory for libraries" FORCE)
ENDIF(UNIX AND NOT WIN32)

SET(CPACK_PACKAGE_NAME "${PACKAGE}")
SET(CPACK_PACKAGE_VENDOR "Adalin B.V." CACHE INTERNAL "Vendor name")
SET(CPACK_PACKAGE_CONTACT "tech@adalin.org" CACHE INTERNAL "Contact")
SET(CPACK_RESOURCE_FILE_LICENSE "${PROJECT_SOURCE_DIR}/COPYING" CACHE INTERNAL "Copyright" FORCE)

#  read 'description` file into a variable
file(STRINGS description descriptionFile)
STRING(REGEX REPLACE "; \\.?" "\n" rpmDescription "${descriptionFile}")
STRING(REGEX REPLACE ";" "\n" debDescription "${descriptionFile}")

IF(WIN32)
  SET(CPACK_NSIS_DISPLAY_NAME "${PACKAGE_NAME}")
  SET(CMAKE_INSTALL_PREFIX  "${PACKAGE_NAME}" CACHE PATH "Destination Folder" FORCE)
  SET(CPACK_PACKAGE_FILE_NAME "${PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}")
  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "${PACKAGE_NAME}")
  SET(CPACK_NSIS_MODIFY_PATH ON)
  SET(CPACK_GENERATOR NSIS)

ELSE(WIN32)
  SET(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}.el6.${CPACK_PACKAGE_ARCHITECTURE}")
  SET(CPACK_GENERATOR "DEB;RPM")

  # DEBIAN
  IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
    SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "amd64")
  ELSE (CMAKE_SIZEOF_VOID_P EQUAL 8)
    SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "i386")
  ENDIF (CMAKE_SIZEOF_VOID_P EQUAL 8)
  SET(CPACK_DEBIAN_PACKAGE_DESCRIPTION ${debDescription})
  SET(CPACK_DEBIAN_PACKAGE_PREDEPENDS "multiarch-support")
  SET(CPACK_DEB_COMPONENT_INSTALL ON)

  # RPM
  SET(CPACK_RPM_PACKAGE_ARCHITECTURE ${PACK_PACKAGE_ARCHITECTURE})
  SET(CPACK_RPM_PACKAGE_DESCRIPTION ${rpmDescription})
  SET(CPACK_RPM_CHANGELOG_FILE "${CMAKE_SOURCE_DIR}/ChangeLog")
  SET(CPACK_RPM_COMPONENT_INSTALL ON)
ENDIF(WIN32)

# ZIP
SET(CPACK_SOURCE_GENERATOR ZIP)
SET(CPACK_SOURCE_IGNORE_FILES
    "^${PROJECT_SOURCE_DIR}/.git;\\\\.gitignore;Makefile.am;~$;${CPACK_SOURCE_IGNORE_FILES}" CACHE INTERNAL "Ignore files" FORCE)

