#
# spec file for package libaax2 (Version @PACKAGE_VERSION@)
#
# Copyright (c) 2005-2012 Adalin B.V.
# This file and all modifications and additions to the pristine
# package are under the same license as the package itself.
#

Name:           libaax2
Version:        @AAX_VERSION@
Release:        2
Requires(pre):  dialog 
Summary:	Stereo and 4D Audio eXtensions library
Group:          System/Libraries
Provides:       libaax2
License:        License For Customer Use of ADALIN AEONWAVE AUDIO EXTENSIONS LIBRARY Software
Vendor:         Adalin B.V.
URL:            http://www.adalin.com/

%description
A hardware accelerated, high speed and versatile stereo and 4D audio mixing
library that can handle almost any audio mixing demands; from studio effect
mixing to immersive simulation. 
 
AeonWave combines the demands for stereo mixing as wel as immersive 3d audio
rendering or simulation and gaming in one library. There is support for
audio-frames that can either be used as containers for moving around multiple
3d sound emitters or for applying filters or effects to multiple stereo 
sources before sending it to the final mixer. There is also a three-band
parametric equalizer for the final mixing stage.
 
Stereo filters include Tremolo, Volume Envelope and Frequency filtering.
3D filters include angular and distance filtering.
Stereo effects include Vibrato, Pitch Envelope, Distortion and Chorus.
3D effects support consists of Velocity effect (Doppler).
 
A built-in waveform generator that supports Sine, Square, Triangle, Sawtooth
and Impulse waveforms as well as White, Pink and Brownian Noise. Different
waveforms can be mixed or ringmodulated at different frequencies and mixing
ratio's allowing a wide range of complex waveforms to be generated on-demand.
 
For audio buffers the library supports 9 native audio formats and a total
of 29 different formats (inclusing signed/unsigned and big/little-endian).
Buffers can be converted from and to any of the supported formats.


%prep
#%setup -q -n aax-%version 

%build

%install

%clean

%pre
if [ -z $DISPLAY ]; then DIALOG=dialog
else
  if [ -f /usr/bin/gdialog ]; then DIALOG=gdialog
  else if [ -f /usr/bin/xdialog ]; then DIALOG=xdialog
       else DIALOG=dialog
    fi
  fi
fi

tempfile=`tempfile 2>/dev/null` || tempfile=/tmp/test$$
trap "rm -f $tempfile" 0 1 2 5 15
$DIALOG --clear --title "License For Customer Use of ADALIN Software" \
        --cr-wrap --yesno \
        "IMPORTANT NOTICE -- READ CAREFULLY: This License For Customer Use of ADALIN Software (\"LICENSE\") is the agreement which governs use of the software of ADALIN B.V. (“ADALIN”) obtainable herefrom, including computer software and associated printed materials (\"SOFTWARE\"). By obtaining, installing, copying, or otherwise using the SOFTWARE, you agree to be bound by the terms of this LICENSE. If you do not agree to the terms of this LICENSE, do not obtain the SOFTWARE.

RECITALS

Use of ADALIN's products requires two elements: the SOFTWARE and a personal computer. The SOFTWARE is protected by copyright laws and international copyright treaties, as well as other intellectual property laws and treaties. The SOFTWARE is not sold, and instead is only licensed for use, strictly in accordance with this document. This LICENSE sets forth the terms and conditions of the SOFTWARE LICENSE only.

1. DEFINITIONS

1.1 Customer. Customer means the entity or individual that obtains the SOFTWARE.

1.2 Product-Key. A series of letters and digits supplied to the Customer to unlock the extended feature set of the SOFTWARE.

2. GRANT OF LICENSE

2.1 Rights and Limitations of Grant. ADALIN hereby grants Customer the following non-exclusive, non-transferable right to use the SOFTWARE, with the following limitations:

2.1.1 Rights. Customer may install and use one copy of the SOFTWARE on a single computer, and except for making one back-up copy of the Software, may not otherwise copy the SOFTWARE. This LICENSE of SOFTWARE may not be shared or used concurrently on different computers.

2.1.2 Linux/FreeBSD Exception. Notwithstanding the foregoing terms of Section 2.1.1, SOFTWARE designed exclusively for use on the Linux or FreeBSD operating systems, or other operating systems derived from the source code to these operating systems, may be copied and redistributed, provided that the binary files thereof are not modified in any way.

2.1.3 Personal Product-Key. The Product-Key is personal and is not transferable. The Product-Key may not be shared or used concurrently on different computers and Customer is responsible to keep their Product-Key safe. Product-Key's are provided by ADALIN and by ADALIN only. Use of a Product-Key provided by a third party is prohibited.

2.1.4 Limitations.

No Reverse Engineering. Customer may not reverse engineer, decompile, or disassemble the SOFTWARE, nor attempt in any other manner to obtain the source code.

No Separation of Components. The SOFTWARE is licensed as a single product. Its component parts may not be separated for use on more than one computer, nor otherwise used separately from the other parts.

No Rental. Customer may not rent or lease the SOFTWARE to someone else.

3. TERMINATION

This LICENSE will automatically terminate if Customer fails to comply with any of the terms and conditions hereof. In such event, Customer must destroy all copies of the PRODUCT-KEY and all copies of the SOFTWARE and all of its component parts.

Defensive Suspension. If Customer commences or participates in any legal proceeding against ADALIN, then ADALIN may, in its sole discretion, suspend or terminate all license grants and any other rights provided under this LICENSE.

4. COPYRIGHT

All title and copyrights in and to the SOFTWARE (including but not limited to all images, photographs, animations, video, audio, music, text, and other information incorporated into the SOFTWARE), the accompanying printed materials, and any copies of the SOFTWARE, are owned by ADALIN. The SOFTWARE is protected by copyright laws and international treaty provisions. Accordingly, Customer is required to treat the SOFTWARE like any other copyrighted material, except as otherwise allowed pursuant to this LICENSE and that it may make one copy of the SOFTWARE solely for backup or archive purposes.

5. APPLICABLE LAWThis LICENSE shall be deemed to have been made in, and shall be construed pursuant to, the laws of the The Netherlands. The United Nations Convention on Contracts for the International Sale of Goods is specifically disclaimed.

6. SOFTWARE PATENTS

Customer agrees not to pursue any Software Patent infringement proceeding against ADALIN. In the event Customer does commences or participates in any legal proceeding against ADALIN for Software Patent infringement Customer specifically agrees to indemnify ADALIN against all costs and liabilities arising out of all claims which result from, or involve an allegation of, any breach of this clause.

7. DISCLAIMER OF WARRANTIES AND LIMITATION ON LIABILITY

7.1 No Warranties. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THE SOFTWARE IS PROVIDED \"AS IS\" AND ADALIN DISCLAIMS ALL WARRANTIES, EITHERWHETHER EXPRESS OR, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND, FITNESS FOR A PARTICULAR PURPOSE. , TITLE, AND NON-INFRINGEMENT. Without limiting the foregoing, you are solely responsible for determining and verifying that the SOFTWARE that you obtain and install is the appropriate version for your operating system, and computer hardware.

7.2 No Liability for Consequential Damages. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL ADALIN BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, LOSS OF DATA, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER PECUNIARY LOSS) ARISING OUT OF THE USE OF OR INABILITY TO USE THE SOFTWARE, EVEN IF ADALIN HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

8. MISCELLANEOUS

If any provision of this LICENSE is inconsistent with, or cannot be fully enforced under, the law, such provision will be construed as limited to the extent necessary to be consistent with and fully enforceable under the law. This LICENSE is the final, complete and exclusive agreement between the parties relating to the subject matter hereof, and supersedes all prior or contemporaneous understandings and agreements relating to such subject matter, whether oral or written. This LICENSE may only be modified in writing signed by an authorized officer of ADALIN.  Customer agrees that it will not ship, transfer or export the SOFTWARE into any country, or use the SOFTWARE in any manner, prohibited by any export laws, restrictions or regulations.

Copyright 2005-2013 Adalin B.V. <tech@adalin.org>" 45 70

case $? in
  0)
    if [ x$SUDO_USER != "x" ]; then
      INSTALLER=$SUDO_USER;
    elif [ x$USER != "x" ]; then
      INSTALLER=$USER;
    else
      INSTALLER=root;
    fi

    if [ x$INSTALLER = "x" ]; then
      OCONFIGFILE="$HOME/.aaxconfig.xml"
      CONFIGDIR="$HOME/.aax"
      INSTALLER=`stat -c %U $HOME`
      GROUP=`stat -c %G $HOME`
    else
      INSTALLER_HOME=`grep $INSTALLER /etc/passwd | cut -d ":" -f6`
      OCONFIGFILE="$INSTALLER_HOME/.aaxconfig.xml"
      CONFIGDIR="$INSTALLER_HOME/.aax"
      GROUP=`stat -c %G $INSTALLER_HOME`
    fi
    CONFIGFILE="$CONFIGDIR/config.xml"

    if [ x"$INSTALLER" = xroot ]; then
      if [ ! -d /etc/aax ] ;then
        mkdir /etc/aax;
      fi
      CONFIGFILE="/etc/aax/config.xml"
    fi

    if [ ! -f "$CONFIGFILE" ] && [ ! -f "$OCONFIGFILE" ]; then

      $DIALOG --title "Personal product-key" --nocancel --clear --cr-wrap \
          --inputbox "The product-key is a series of letters and digits separated by dashes, and was provided when you purchased the software. Without a proper product-key the software will function in the Lite mode which is with limited functionality.\nKeep this line empty if you did not yet pruchase the product key.\n\nPlease enter the personal product-key:" 16 60 2> $tempfile
      retval=$?

      case $retval in
        0)
          KEY=`cat $tempfile`
          echo -e "<?xml version="1.0"?>\n\n<Configuration>\n <product-key>$KEY</product-key>\n <output>\n  <frequency-hz>48000</frequency-hz>\n  <interval-hz>46</interval-hz>\n  <update-hz>20</update-hz>\n  <setup>stereo</setup>\n </output>\n</Configuration>" > $CONFIGFILE
          chmod 600 $CONFIGFILE
          chown $INSTALLER:$GROUP $CONFIGFILE
          ;;
      esac
      rm -f $tempfile
    fi
    ;;
  1)
    exit 1;;
  255)
    exit 1;;
esac


%post
umask 007
/sbin/ldconfig > /dev/null 2>&1


%postun
if [ x$SUDO_USER != "x" ]; then
  INSTALLER=$SUDO_USER;
elif [ x$USER != "x" ]; then
  INSTALLER=$USER;
else
  INSTALLER=root;
fi

if [ x$INSTALLER = "x" ]; then
  OCONFIGFILE="$HOME/.aaxconfig.xml"
  CONFIGDIR="$HOME/.aax"
  INSTALLER=`stat -c %U $HOME`
# GROUP=`stat -c %G $HOME`
else
  INSTALLER_HOME=`grep $INSTALLER /etc/passwd | cut -d ":" -f6`
  OCONFIGFILE="$INSTALLER_HOME/.aaxconfig.xml"
  CONFIGDIR="$INSTALLER_HOME/.aax"
# GROUP=`stat -c %G $INSTALLER_HOME`
fi
CONFIGFILE="$CONFIGDIR/config.xml"

# remove stale configuration files
if [ x$INSTALLER = "xroot" ]; then
  if [ -d /etc/aax ] ;then
    rm -f /etc/aax/config.xml > /dev/null;
    rmdir /etc/aax > /dev/null;
  fi
fi
rm -f $CONFIGFILE;

umask 007
/sbin/ldconfig > /dev/null 2>&1


%files
%defattr(-,root,root)
%{_bindir}/
%{_bindir}/aaxinfo
%{_libdir}/
%{_libdir}/libaax.so
%{_libdir}/libaax.so.2
%{_libdir}/libaax.so.2.2.0
%{_includedir}/
%{_includedir}/aax.h
%{_includedir}/aaxdefs.h
%dir %{_defaultdocdir}/%{name}/
%doc %{_defaultdocdir}/%{name}/copyright
%doc %{_defaultdocdir}/%{name}/changelog.gz
%doc %{_defaultdocdir}/%{name}/examples/aaxconfig.xml

%changelog -n aax
* Fri Oct 18 2013 - tech@adalin.org
- Distance-delay mode now adds delayed state changes in addition to delayed
  start/stop. State changes include; pitch, gain, position, orientation and
  velocity.
- Added sense of height to Surround sound; emitters can now be heard above
  and below the speakers. This is best perceived if the speakers and the
  listeners ears are (almost) in the same horizontal plane.
- Add support for the AAXS (AeonWave Auto-generated XML Sound) audio format.
- Add double precision 64-bit floating point matrix support functions.
- Implement hardware volume support for ALSA and WASAPI.
  - hardware volume is adjusted within hardware boundaries, volume settings
    outside the hardware range are adjusted using software fallback.
  - the volume filter now reports the hardware minimum and maximum.
- Implement Auto-Gain Control with a user definable adjust-rate.
- Add the option to select stereo, mono-left, mono-right or mono-mix for
  audio capturing.
- Add an aaxMixerGetState function to retreive the state of the current
  audio stream. This can for instance be used to reinitialize the device
  after the hardware audio format has changed.
- Add the option to set the number of times to loop a buffer.
- Fixed reported bugs.
  - Fix an issue that prevented ALSA from reporting new hardware while an
    application was running.
  - Fix an issue with loopback capturing of the playback stream.
  - Fix an issue with flanging for emitters registered at the final mixer.
  - Fix an issue that affected HRTF and Surround sound playback.
* Mar 08 2013 - tech@adalin.org
- Add an aaxFree function to free memory allocated by the library.
  This might be necessary when using different compilers.
- Add support for a Reverb effect which anly applies to the final mixer.
- Make the dynamic-gain envelope-following mode a proper audio-compressor and
  expander with noise gate. The offset property defines the threshold level.
- Add the option to retrieve the compression level for every track.
- Add an aaxAudioFrameGetSetup function to be able to retreive the above.
- Add the ability to retreive peak and average audio levers for every track
  (final mixer only).
- Fix distortion behavior, it was overcompressing for high distortion factors.
- Add an envelope following option for the distortion effect.
- Remove some dupplicate code, most code is now shared between the mixer and
  audio-(sub)frames which should lead to fewer case specific problems.
- Fix LFO situations where changing the LFO values could become out of bounds.
- Fix filters and effects for registered sensors.
- Overhaul of the Windows backend en threads code.
  - Fix a lot of corner case situations that failed before.
  - Improve runtime performance conciderably.
  - Fix registered sensors.
- Allow sensors to be registered at subframes.
- Expose the driver latency.* Tue Aug 21 2012 - tech@adalin.org
- Fix a naming clash between ZeroXML and libxml2. The function names of the
  library were inadvertently exposed.
- Sanitize the slot parameters for Filters and Effects when calling their
  respective SetState function to prevent possible buffer overflows.
* Tue Jul 31 2012 - tech@adalin.org
- Fix a delay effects (phasing, chorus, flanging) problem that was introduced
  by the off-by-one fix for streaming audio with a low sample frequency.
- Fix IMA4 support for WAV file capturing and playback on non file backends.
- Fix end-of-file problem that could cause a segmentation fault.
- Fix an off-by-one problem for the loopback device.
* Mon Jul 16 2012 - tech@adalin.org
- Added native support for Windows (Vista or later).
- A complete overhaul of the File backend;
  - added file capturing support and support for different output formats.
  - added the infrastructure to detect and handle different audio file-formats
      + WAV files are always supported for input and output.
      + MP3 file (input) is supported if libmpg123 is installed.
- Fix the default ALSA device for when PulseAudio isn't active.
- Fix an off by one problem for streaming audio with a low sample frequency
  compared to the mixer frequency.
- Fix a problem where multiple open backends in the same application could
  not have different rendering types (HRTF/Stereo/Spatial/Surround).
- Moved the include files aax.h to aax/aax.h and aaxdefs.h to aax/defines.h
  and provide stubs that automatically include the correct header file.
- Moved the configuration file from ~/.aaxconfig.xml to ~/.aax/config.xml
  and added code that automatically moves the old configuration file to the
  new location if it doesn't yet exist.
- Made the aaxDriverGetInterface functions more reliable by storing interface
  description for every opened device (as a bonus this also causes less
  kernel audio device detection calls).
* Tue May 01 2012 - tech@adalin.org
- Added an 8 band graphical equalizer for the final mixer stage.
- Added an envelope following option for filters and effects (auto-wah).
- Added seamless transition from tube-like soft-clipping to sharp-clipping
  and add an asymmetric clipping option. This is most noticeable for
  the distortion effect.
- Added support for registered sensors. Registering an aaxConfig handle
  which is opened in AAX_MODE_READ mode eliminates the need for the
  application to do buffer handling between the physical input device and
  an emitter. It also improves latency since reading the buffer and
  processing it's contents is done in a single step.
  Registered sensors are only guaranteed in stereo mode for this release.
- Added support for subframes. Subframes are like regular audio-frames
  but they are registered at other audio-frames. Where audio-frames
  render in their own thread, subframes will render in their parents thread.
- This removes any limit to the number of supported emitters as long as the
  system can handle the load. The maximum number of registered emitters,
  sensors and subframes per audio frame is still 256.
- Move the speaker setup from the global section to device specific section
  in the configuration file. This allows for different setups for headphone
  connections and (for example) 4 channel spatialised speaker setup.
- Added support for a dedicated configuration file entry for every device.
- Added the inverse of the modulation-waveform for filters and effects.
- Added the option to modify the Q (resonance) factor of frequency filters.
- A complete overhaul of the recording code and of the ALSA backend.
- Fixed filter and effect support for streaming audio.
- Added a resampling option for fetching buffer data.
- Speed-up of filter and effect processing.
- Added flanging effect.
- Dozens of small fixes.
* Fri Nov 11 2011 - tech@adalin.org
- Fix a possible deadlock situation
* Mon Oct 10 2011 - tech@adalin.org
- Added waveform generator
- Added timed-gain filter and timed-pitch effect (envelopes)
- Assorted small bug-fixes and usability updates.
* Tue Aug 27 2011 - tech@adalin.org
- Added hardware acceleration
- Added submixing capable audio-frames
- Added support for Filters and Effects
- New simplified, robust and consistent API
- New spatialised speaker setup
* Wed Dec 23 2009 - tech@adalin.org 
- Split up the AeonWave library and the OpenAL support code
- New HRTF and Surround sound
- Added matrix operations
* Wed May 21 2008 - tech@adalin.org 
- created package
